var tipuesearch = {"pages": [{'title': 'Weeks', 'text': 'Week2-5 \n Week6-9 \n Week10-14 \n Week15-18 \n', 'tags': '', 'url': 'Weeks.html'}, {'title': 'Week2-5', 'text': '建立個人cad2019倉儲 \n 1.下載 2019Fall可攜套件.7z ，完成後開啟start。 2.先登入自己的github帳號， 創建一個新的倉儲cad2019。 3.進入要存放該資料的資料夾tmp。 4.git clone\xa0 https://github.com/s40723210/cad2019 。 5. git submodule add https://github.com/mdecourse/cmsimde.git。 6.再進入cmsimde，輸入python -m pip install flask_cors。 7.完成後，python wsgi.py 開始編輯倉儲。 8.login密碼為admin，gitconfig要有帳號密碼。 9.處理完，git status > git add . > git commit -m "標題" > git push。 10.開啟github倉儲設定，點選要推送的branch即可。 \n 我的教學影片(有字幕): https://youtu.be/jBFzju1F43s \n \n Solvespace 編譯 \n \n \n 1.將Y:\\portablegit\\bin\\sh.exe的sh.exe改成 > sh_rename_for_solvespace.exe。 \n 2.到tmp下git clone --recurse-submodules https://github.com/solvespace/solvespace.git 。 \n 3.進入tmp下的solvespace\\extlib\\angle\\CMakeLists.txt。 \n 4.將CMakeLists.txt中的第713 and 714行前面加上#。 \n 5. cd solvespace/extlib/libpng >\xa0 mkdir build >\xa0cd build。 \n 6.cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release >\xa0mingw32-make。 \n 7. 把libpng.dll.a 改名為 libpng_static.a 並放到Y:/msys64\\mingw64\\lib。 \n 8.在solvespace建立build資料夾，在cd build。 \n 9.cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release >\xa0mingw32-make。 \n 10.到bin內開啟solvespace程式，把需要的檔案從Y:/msys64\\mingw64\\bin拿。 \n \n 我的教學影片(有字幕): https://youtu.be/s5Onnb9CPSI \n \n 解決cmake .. -G的Erro \n 在用cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release執行時，碰到了 Y:/msys64/mingw64/bin/gcc.exe -- broken，無法執行的時候，是因為在路徑上有中文字，才讓程式出現錯誤的，以下是我的如何處理的影片。 \n 我的教學影片(有字幕): https://youtu.be/yS-NvOgfCRY \n \n Solvespace 操作 \n 1.進入課程選擇你要操作的Solvespace。 2.開啟自己隨身的Solvespace程式。 3.選取圖示或使用快捷鍵來進行繪畫。 4.將邊長設定為同等大小，再 長出形成一個立體圖。 6.讓長出的長度也同等大小，就能做出一個正方形。 7.點選右邊的框框來更改外觀和透明度。 8.存檔存為html檔，再來建立一個基本的網頁html。 7.輸入指令來將該圖檔導入，就有完整的網頁html。 ☆可參照我的 \xa0 SolveSpace快捷鍵 \n 成品圖(可滑鼠拖移): 我的操作影片(有字幕): https://youtu.be/4ujff-3Hbkc \n \n \n', 'tags': '', 'url': 'Week2-5.html'}, {'title': 'Week6-9', 'text': '參數化零組件繪製 \n 1.開啟老師的雙輪車圖和Solvesoace。 2.先畫車身，用一個凹型然後長出。 3.在除掉一個方形， 用difference將該部位去除 。 4.畫一個放輪軸的洞，除料一直線。 5.畫後輪一個圓柱，在畫一個半圓旋轉長出。 6.這樣就完成了車身了，存檔起來，開新檔。 7. C快捷鍵繪製一圓 輪子，圓形給厚度，再畫軸。 8.開剛剛的車身來組合，即可完成雙輪車。 \n ☆可參照我的 \xa0 SolveSpace快捷鍵 \n 成品圖(可滑鼠拖移): \n \n 我的操作影片(有字幕): https://youtu.be/c-6eKPufTlE \n \n \n 網際 V-rep 模型控制 \n 1. 先到Task1裡，下載V-rep 3.6.1 rev 4.7z和\xa0web_vrep2.zip。 2.將兩個檔案都解壓縮在自己的隨身碟tmp裡面。 3.打開自己的start_mdecourse，輸入regedit開啟程式。 4.將HKEY_CLASSES_ROOT內的，.py和.py_auto_file刪除。 5.開啟web_vrep2的 app.py，點Tools的Go。 6.再點開剛剛載好的 V-REP3\\V-REP_PRO_EDU > vrep.exe 。 7.開啟後將 web_vrep2的 two_wheeler.ttt拖移進去。 8.到 http://127.0.0.1:5000/裡面，就可以操控了。 \n 我的操作影片(有字幕): https://youtu.be/2nrqVEW3qAc \n \n \n 新增啟動與停止按鈕 \n 1.進入2b Task 1的\xa0 #14 \xa0，準備操作。 2.開啟start_mdecoursr，進入web_vrep2。 3.編輯templates裡面的controls.html。 4.加入start 和 stop 的botton，直接複製改。 5.編輯vrep_linefollower.py，if加入判斷式。 if direction == \'start\':\xa0 vrep.simxStartSimulation(self.clientID, vrep.simx_opmode_oneshot) if direction == \'stop\':\xa0 vrep.simxStopSimulation(self.clientID, vrep.simx_opmode_oneshot) 6.補上else: ，完成後儲存，記得語法要排好。 7.開啟v-rep程式，將 two_wheeler.ttt檔案拖入。 8.再開啟app.py 的go進入網址localhost:5000。 9.這樣子就可以進行start 以及 stop的操作了。 \n 我的教學影片: https://youtu.be/fsWnXIUaZN8 \n \n \n Solvespace 納入學號 \n 1.先到自己tmp下的solvespace\\build\\src\\CMakeFiles\\solvespace.dir。 2.刪掉solvespace.cpp.obj檔案，開啟start_mdecourse。 3.再到solvespace\\src找到solvespace.cpp用編輯器打開。 4.Ctrl+f 搜尋GPL，把Message下面的This is SolveSpace 。 5.改成This is SolveSpace is compiled by 40723210。 6.進入solvespace\\build，輸入 mingw32-make，等待完成。 8.開啟solvespace.exe，點help > about 就完成了驗證。 我的教學影片(有字幕): https://youtu.be/rd_2Q----oA \n \n \n Solvespace 繪圖驗證 \n #可以使用滑鼠上下移動，尋找想看的教學影片，沒顯示出來就案F5(重新整理)。 \n \n \n 啟用 CMSiMDE 中的網誌系統 \n 1.先開啟start_mdecourse，輸入leo。 2.將config內的pelican.leo拖入leo。 3.到自己的網頁，開啟Home下的bolg。 4.複製網址，把SITEURL = 改成自己的網址。 5.對local-blog點右鍵，案goto script。 6.再到倉儲輸入.py的指令，就可以了。 \n 我的教學影片(有字幕): https://youtu.be/7OKU6LOja3Y \n \n \n 導入 Webots \n 1.到tools下的webots，下載webots_2019b_rev1.7。 2.放到Y槽解壓縮，創建一個 start_webots 。 3.直接複製 start_mdecourse指令，加上老師給的指令。 4.有 執行路徑設定和 啟動指令，符號要打對。 5. 存檔後啟動，只有出現聲音erro就ok了。 \n 我的教學影片(有字幕): https://youtu.be/wiN1nghgnew \n \n \n 以ssh 對 Github 連線 \n 1.先將Y:\\portablegit\\bin下的sh.exe建立起來。 2.輸入sh，輸入 ssh-keygen -t rsa -b 4096 -C "學號 "。 3.在Y: \\home_mdecourse裡創建一個.ssh。 4.輸入 Y: \\home_mdecourse \\.ssh/id_rsa。 5.按完Enter後，下載putty放在Y槽內。 6.編輯 start_mdecourse.bat，加入如下的指令。 Set GIT_HOME=%Disk%:\\portablegit\\bin\\ Set GIT_SSH=%Disk%:\\putty\\plink.exe 7.到自己倉儲的.git，url改成ssh形式。 8.開啟puttygen.exe，將鑰匙存成private key。 9. 開啟putty.exe，設定proxy和路徑，在案save。 10.再到github存入自己的key，就可以了。 \n 我的教學影片(有字幕): https://youtu.be/k-sOF6PQa1I \n \n \n 期中報告 \n 網誌連結: https://s40723210.github.io/cad2019/blog/2018-Fall-32-bit-Windows-w9.html \n 心得: 從Week 2 - Week 9中我學到了很多的東西，這一學期使用的是亂數分組，所以組員有些都不太熟，一開始一樣都是創一個倉儲，然後維護他，將每周的內容和影片都上傳上去，Solvespace 是一個很小的繪圖軟體，可以隨身攜帶，所以非常的方便，只是功能不多而已，它跟我們之前所學的繪圖軟體不太一樣，所以我花了一點的時間去熟悉它，再來就是V-rep 這個軟體，我們教了一下，就換成Webots了，因為Webots是免費的軟體，而且又比V-rep還多功能，所以我很好奇學不學會。 \n 影片連結: https://youtu.be/dWtvxaCwQTg \n \n', 'tags': '', 'url': 'Week6-9.html'}, {'title': 'Week10-14', 'text': '各組開始協同倉儲，因為我是組長就創建第五組倉儲，並且回報lssues，所有的組員都必須要fork分組倉儲，然後使用pull requests來進行更新，也要處理並解決網址、簡報、網誌出現的 markdown 改版衝突，而pull requests有分為正向及反向。 \n 組員擁有(merge)的權力，也就是可以自己進行pull request，不需要經過組長的同意，就可以直接合併(merge)，不過這樣就會出比較多的問題，可能有些人更改的內容直接被蓋掉，要解決的話可能會出現很多衝突，所以不建議給太多人擁有( merge)權力，像是我只有給一位組員( merge)權力，這樣子他就可以幫我審核，其他組員的pull request，也能幫我進行同意合併。 \n pull requests正向 是組員點選New pull request將資料推送回各組倉儲，再由組長進行審核，確認無誤之後即可按同意來合併，有衝突時，組員必須回到fork倉儲，輸入git pull "fork倉儲網址"，再New pull request一次，組長同意後即可。 \n pull requests反向 一樣是組員點選New pull request，不過要特別改成分組倉儲退送至個人倉儲，意思就是把個人的倉儲版次更新，然後在自己點選同意，不過這樣子比較麻煩，還不如直接輸入git pull "fork倉儲網址"，這樣子比較快，直接就更新到最新版次。 \n 第五組倉儲網址: https://s40723210.github.io/cad2019bg5/ \n \n Fork倉儲 \n 1.先登入github，在搜尋自己組的倉儲，點進去。 2.點選右上角的Fork，選擇自己的github。 3.git clone --recurse-submodules\xa0(倉儲網址)。 4.git push完成，點選New pull request，等組長同意。 5.有衝突的話，進行git pull (分組網址)\xa0。 6.整合完成之後即可git push，等待組長同意。 \n 我的教學影片(有字幕): https://youtu.be/1bZ16BgmF8c \n \n \n 虛擬主機版NX12 \n 可以在學校外面，使用的正版NX12，不用再去設定 VPN。 \n 1.下載 VirtualBox 以及老師給的 NX12.0.2 虛擬主機板 。 2.設定一下VirtualBox來建立一個虛擬主機。 3.將老師的NX12虛擬硬碟導入虛擬主機裡面。 4.啟動完成後，開啟NX12測試功能是否正常。 5.使用網路探索，來點選網路內的VBOXSVR。 6.新增一個跟主機共用的資料夾，再拉到桌面。 7.再將檔案拖入，回到原本主機檢查，是否有檔案。 \n 我的教學影片(有字幕): https://youtu.be/UTyvUyo_XFk \n \n \n Batch Command設定 \n 1.進入課程網站，Task2的Batch Command。 2.開啟編輯器，把cad.bat的指令複製貼上。 3.複製貼上，我的路徑不同所以有做改動。 4.編輯完成後，儲存在y槽內，名子cad.bat。 5.直接輸入cad就可以開啟近端9443了。 6.其他的都是以一樣方法來編輯，就可以了。 \n 我的教學影片(有字幕): https://youtu.be/Zw1n_6ba4C8 \n \n \n 導入 GitExtensions \n 1.打開y槽，開啟GitExtensions.exe。 2.進入Setting，設定git的home路徑。 3.再來設定ssh改成putty，在案ok。 4.開啟自己的倉儲，點選tools的GUI。 5.輸入想要的訊息，中文英文都可以。 6.案Stage changed > commit > push 。 7.再到自己的倉儲檢查就可以了。 我的教學影片(有字幕): https://youtu.be/1j9J9JUULEo \n \n \n 首先 Webots是一個具備建模、程式設計和模擬移動機器人開發平臺，主要用於地面機器人模擬。使用者可以在一個共享的環境中設計多種複雜的異構機器人，可以自定義環境大小，環境中所有物體的屬性包括形狀、顏色、文字、質量、功能等也都可由使用者來進行自由配置，它使用ODE檢測物體碰撞和模擬剛性結構的動力學特性，可以精確的模擬物體速度、慣性和摩擦力等物理屬性。每個機器人可以裝配大量可供選擇的模擬感測器和驅動器，機器人的控制器可以通過內部整合化開發環境或者第三方開發環境進行程式設計，機器人每個行為都可以在真實世界中測試。 再來是V-REP，堪稱機器人仿真界的NO.1，是全球領先的機器人及模擬自動化軟件平台。V-REP讓使用者可以模擬整個機器人系統而一體（如感測器或機械結構)，通過詳盡的應用程序接口（API），可以輕鬆地集成機器人的功能。V-REP可以被使用在遠程監控，硬件控制，快速原型驗證，控制算法開發與參數調整， 安全性檢查，機器人教學，工廠自動化模擬及產品展示等各種領域。V-REP集成開發環境，基於分佈式控制體系結構，每個仿真對象（模型）可以通過嵌入式腳本，一個插件，ROS子系統 ，遠程API客戶端，用戶定制解決方案實現單獨控制。這些極大的擴展了V-REP的功能，並且成為了多機器人系統應用的理想平台。 使用心得 :目前使用下來，我覺得webots比較好用，webots的場景逼真又接近於現實，而且也能模擬許多複雜的狀況，在設定上也提供了很多的範本，控制器程式就在旁邊也易於更改。相較之下v-rep的逼真度就比較弱，雖然比webots還易於編輯零件，也比較好在各個零件加入一些 感測器或機械結構，可是要一個一個定義也是很麻煩的，模擬上不會說比webots還要差很多，可是v-rep的遠端控制，就贏了webots許多，v-rep能通過應用程序接口，也就是雲端控制系統，能廣泛的應用在許多開發上，解論我個人傾向於使用webots，還是越逼真越好，這樣才是開發者想要的。 \n \n Webots Tutorial-1 \n 1.創建一個新目錄和世界，都要改名子。 \n 2.開始設定地板的格子與外牆的高度。 \n 3.加入一個木箱並且調整大小和高度。 \n 4.複製出三個木箱並且移動到牆角，儲存世界。 \n 5.再來要添加一台e-puck機器，儲存後模擬。 \n 6.使用alt+左鍵拖移，來測試施加外力狀況。 \n 7.設定木箱的物理重量，才能夠施加外力。 \n 8.創建控制器程式(python)，名子一樣要改。 \n 9.修改程式碼後，更改e-puck的controllers。 \n 10.完成後儲存，即可照著腳本進行移動。 \n 我的操作影片(有字幕): https://youtu.be/zINF95Z_b1s \n \n \n V-rep\xa0bubbleRob Tutorial \n 1.點選Add>Primitive shape>Sphere來創建球體。 \n 2.再來Add>Proximity sensor>Cone type創建感測器。 \n 3.將兩者都設定好，改名並將感測器拖移至球體分支下。 \n 4.加入左右輪並設定其座標位子，再加入一顆小球當支點。 \n 5.將三者改名及設定參數後，每個都增加動力源並設好座標。 \n 6.一樣三個都要在球本體(bubbleRob)的分支下，才能相互作用。 \n 7.再來要設定出球本體運動時的動態圖表，有許多設定。 \n 8.創建出數個圓柱體形障礙物將球本體給圍繞起來。 \n 9.新增攝像頭讓球本體移動時，就可以看到它的前視的影像。 \n 10.將球本體的程式碼功能打開，並且將程式碼複製貼入進去。 \n 11.這樣子球本體就會在感測器照到物體時往後退並且迴避。 \n 我的操作影片(有字幕): https://youtu.be/BStp8J-KXuY \n \n \n \n Week13報告 \n 影片連結(有字幕): https://youtu.be/qg7MNUqy0Og \n \n \n Webots Tutorial-2 \n 1.另存一個新的檔案。 2.創建一個新地板場景和實體球。 3.設定其形狀、位置以及參數。 4.更改球體大小以及命名。 5.將邊界物體訂為剛命名的。 6.創建四面牆壁，儲存並測試。 \n 我的操作影片(有字幕): https://youtu.be/bE5tuK2tLBU \n \n \n Webots Tutorial-3 \n 1.另存一個新的檔案。 2.更改四個牆壁的顏色及參數。 3.準備 將球的外觀做改變。 4. 設定所要圖案的路徑，儲存。 5.再來測試 渲染模式即可。 \n 我的操作影片(有字幕): https://youtu.be/d25DXY8W_rU \n \n \n Webots Tutorial-4 \n 1.一樣先建立新的檔案。 2.創建一個python程式檔。 3.將控制改為現在的程式檔。 4.將教材給的程式複製貼上。 5.儲存之後即可開始模擬。 6.機器會緩慢的閃避障礙物。 \n 我的操作影片(有字幕): https://youtu.be/7zeqP98Y2ek \n \n \n Webots Tutorial-5 \n 1.另存一個新的檔案。 2.新增實體 在創建連趕及三個型體。 3.設定好三個的形狀、大小及參數。 4.調整位子、 重量、密度和 質心位置。 5.將物體 方向轉正，提 高位置。 6.設置啞鈴沒有摩擦力，儲存即可。 \n 我的操作影片(有字幕): https://youtu.be/iJBotPDJ5ME \n \n \n Webots Tutorial-6 \n 1.一樣另存一個新的檔案。 2.刪掉其他東西，只留牆壁和地板。 3.創建一個robot， 將實體加上去。 4. 新增一個身體和四個輪子，命名。 5.調整全部的參數、實體 位置和軸位置。 6. 添加感應器， 調整大小和位置。 7.x軸方向要向外，角度是0.3 rad。 8.創建一個 python控制器，命名儲存。 9.更改robot的控制器，選擇剛建的。 10.提高robot的高度， 模擬測試即可。 \n 我的操作影片(有字幕): https://youtu.be/vxuzuLsOoUs \n', 'tags': '', 'url': 'Week10-14.html'}, {'title': 'Solidworks-history', 'text': '\n 1993年 \n 創始人 Jon Hirschtick 招募了一個工程師團隊，旨在使3D CAD軟體更容易上手。Hirschtick從廣受好評的麻省理工學院二十一點隊的成員中籌得100萬美元，開始了他的新事業。該團隊的目標是構建一個基於 Windows平台 的易於使用且價格合理的軟體。這在當時真的是革命性的存在，當時所有其他流行的CAD系統都是在 Unix上構建 的。經過幾年的開發，最初發布的SolidWorks終於來了。 \n 1995年 \n 1.與其他CAD系統的18,000美元相比，SolidWorks的售價 僅為4,000美元 。 \n 2.該軟體更易於使用：與市場上其他CAD軟體相比，用戶只需 3個月 的使用經驗就可以輕 \n 3.鬆上手。易用性的很大一部分原因在於它採用了現代著名的Windows介面。 \n 4.模型的可視化是前所未有的。在光線充足的陰影環境中的構建功能與傳統建模空間形成 \n 5.鮮明對比，傳統建模空間僅顯示黑色背景下的線框。 \n 6.我們現在熟悉的類似 FeatureManager 用於顯示模型的構建歷史。 \n 7.零件，組件和圖紙從一開始就可用。用戶無法在組件中應用配合，但仍可將組件放置到位。 \n 1996年 \n 1.介紹了上下建模。允許使用自上而下的裝配建模方法。 \n 2.用戶現在可以在裝配中使用配合併捕捉動態裝配運動。除了干擾檢測，用戶還可以更輕 \n 3.鬆地驗證形狀，適合度和功能。 \n 4.拖放功能可將一個裝配體零部件移動到另一個裝配體中。 部分配置。 \n 5.自動化物料清單。只有一種方法沒有自定義選項，但它很有效。 \n 1997年 \n 1.鈑金功能首次發布。 \n 2.標準庫功能推出。 \n 3. Loft 功能現在可以使用引導曲線。 \n 4. SolidWorks \xa0 被 \xa0 Dassault Systemes （達索公司）收購。 \n 1997年二次修改 \n 1.面部圓角介紹。 \n 2.裝配配置。 \n 3.完全可定製的組件爆炸視圖。 \n 4.SolidWorks Viewer作為免費產品推出，可與非CAD用戶共享設計，並在與外部方共享 \n 5.數據時保護智慧財產權。 \n 1998年 \n 1.已發布功能面板，現在與設計庫的功能類似。可以拖放到模型上的預製功能。 \n 2.草圖診斷可幫助用戶理解草圖不適用於特定特徵的原因。 \n 3. Lofts 和 Sweeps 的相切控制。 \n 4.組合件封包(Assembly Envelopes)。 \n 1998二次修改 \n 1.智能配合在建造組件中更多地使用拖放式自動化。 \n 2.隨著用戶不斷建造越來越大的組件，輕量級組件可以幫助提高性能。 \n 3.表面處理工具首次推出。 \n 4 .FeatureWorks 用於導入文件，能夠更有效地使用來自其他軟體的現有3D數據。 \n 5.首次 CSWP 考試發布。它是手寫的，並通過郵件發送。 \n 1999年 \n 1. Palm Springs 的第一個SolidWorks World。 \n 2.拖動組件時對組件的實時碰撞檢測。 \n 3.3D草圖介紹。 \n 4.管道模塊發布。 \n 5.2D命令模擬器有助於縮小與以前AutoCAD用戶的差距。 \n 2000年 \n 1.發布 eDrawings 。 \n 2.實現了 Hole Wizard 接口。 \n 3.表面處理更有用，能夠編織，修剪和延伸表面。 \n 4.SolidWorks Explorer。 \n 5.動態間隙檢測可驗證裝配部件之間的最小間隙。 \n 2001年 \n 1.鏡像組件中的組件。 \n 2.引領互動。以前，在任何CAD系統中，只要選擇了命令，軟體就會在模型頂部顯示整個 \n 3.對話框。SOLIDWORKS開始廢除這一點，並轉向我們現在知道的 \n 4.PropertyManagers，並將陰影標註返回到模型。 \n 5.現在允許靈活的子組件進一步捕捉準確的裝配運動。 \n 6.介紹填充表面命令。 \n 7.DXF / DWG導入嚮導發布。 \n 8.3D Meeting（3D會議），最終在幾個版本之後退出。利用Microsoft Live Meeting並允許與螢幕共享進行實時同步會議。 \n 2001年二次修改 \n 1.運動模擬功能現在可以捕捉組件中移動的組件的實際物理動態。 \n 2.介紹大型裝配模式。 \n 3.實現了2D到3D轉換工具，以便將2D CAD數據輕鬆轉換為功能齊全的3D模型。 \n 4.介紹SolidWorks \xa0 Office，將常用的插件如 PhotoWorks ， Toolbox ， Utilities 和 \n 5.FeatureWorks打包成一個產品。 \n 6.Dassault Systemes收購了SRAC並開始將仿真引入主流設計流程。 \n 2003年 \n 1. COSMOSXpress 是第一款 Xpress 產品，它為每個桌面帶來了簡單的零件驗證。 \n 2.3DContentCentral為用戶提供了一個交互和共享模型的社區。 \n 3.多體零件設計。這是一個非常大的問題，現在是焊接，鈑金和模具設計的基礎。 \n 4.收購了 PDMWorks 並引入了SolidWorks Office Professional軟體包。開始將PDM作為 \n 5.每個客戶提供的一部分。 \n 2004年 \n 1.介面更新，包括 CommandManager ，彈出FeatureManager和PropertyManager和 \n 2.ConfigurationManager的管理器視圖選項卡。 \n 3.介紹了 Mold Tools （模具工具）和 Weldments （焊件）。 \n 4.實施Auto Balloon命令以匹配物料清單物料編號中的balloon編號。 \n 5.限制配合以捕捉更複雜的裝配運動。 \n 6.推出了 RealView Graphics ，以便隨時提供更逼真的圖像。 \n 2005年 \n 1.繪圖比較，為用戶提供工具來比較兩個圖紙之間的變化。 \n 2 .Flex 功能。 \n 3.電氣布線，與管道布線一起使用。 \n 4.在圖紙中自動標註，以捕捕捉模型中已定義的尺寸。 \n 5.能夠繪製無限的線條。 \n 6.SolidWorks Rx發布，旨在提供幫助技術支持更好地去識別問題。 \n 2006年 \n 1.發布 Smart Components 功能，允許為硬體之類的物件安裝智能裝配組件。 \n 2.介紹填充圖案。 \n 3.介紹草圖塊。 \n 4.顯示狀態。 \n 5.設計檢查器，允許用戶根據公司標準動態檢查他們的模型。 \n 6.添加了相機視圖功能。 \n 7.發布SolidWorks Office Premium（白金版）軟體包，包括 Routing ， COSMOSWorks8 .和 \xa0 COSMOSMotion 進行模擬，以及 ScanTo3D 。 \n 2007年 \n 1. SWIFT 工具可幫助設計人員在提供自動化解決方案時動態了解模型存在問題或錯誤的原因。 \n 2.可在組件中使用皮帶，鏈條和齒輪功能。 \n 3.用於表面處理的自由形式命令。 \n 4.介紹 Enterprise PDM 。 \n 2008年 \n 1.使用新的菜單欄和 CommandManager 布局對用戶介面進行全面檢修和現代化優化。上 \n 2.下工具欄和快捷工具欄首次可用。所有這些介面組件現在都可以完全自定義。 \n 3.Instant3D，提供拖動和操縱幾何體的功能，可輕鬆測試不同的設計概念。 \n 4.發布 TolAnalyst 。 \n 5.設計剪貼畫，通過剖析現有數據以便在另一個模型中重複使用，可以更輕鬆地重用現有的2D和3D數據。 \n 6.推出 DriveWorksXpress 和 DFMXpress 。 \n 2009年 \n 1.PhotoView360圖像渲染作為第一個渲染器引入，以訪問處理器的多核功能。 \n 2. SpeedPak 現在可用於簡化裝配中的組件。 \n 3.為追求更高目標，所以引入傳感器。 \n 4. CircuitWorks 發布並添加到SolidWorks Office Premium（白金版）軟體包中。 \n 5.發布 3DVIA Composer 。 \n 2010年 \n 1.現在提供可持續發展方案，幫助用戶了解其設計對環境的影響。 \n 2.快速標註尺寸使得創建細節圖更加容易。 \n 3.介紹基於事件的運動模擬。 \n 4.首次提供滑鼠手勢快捷鍵。 \n 5.現在可以進行多體鈑金建模。 \n 2011年 \n 1.PhotoView360完全集成到SolidWorks介面中。 \n 2.現在可以使用Walk-through（走查）功能。 \n 3.引入了 Defeature 工具以幫助限制模型中的智慧財產權數量。 \n 4.現在可以在 Simulation 中使用平面簡化。 \n 5.自動排列圖紙中的尺寸。 \n 2012年 \n 1.方程式編輯器經過徹底檢修後，更加用戶友好。 \n 2.介紹 Large Design Review 。 \n 3. Feature Freeze 現在可以讓用戶更好地控制性能。 \n 4.鈑金增強：邊線法蘭的更多選擇，引入掃描法蘭，使用的成型工具更加人性化。 \n 5.發布成本計算加載項。 \n 2013年 \n 1. View Orientation 有一個對話框，不再只是在工具欄上了。還引入了選擇器多維數據集 \n 2.以及保存視圖功能以便之後使用。 \n 3.以前的版本文件互操作性：2013文件現在可以在2012 SP5中打開。 \n 4.介紹 Conic 草圖實體。 \n 5.相交功能。 \n 6. Customer Portal （客戶門戶網站）上提供了 CAD Admin Dashboard （CAD管理員儀錶板）。 \n 2014年 \n 1.能夠通過上下工具欄快捷方式添加標準配合。 \n 2.替換草圖實體使用戶能夠用新的實體替換舊實體並仍然維護下游引用。 \n 3.推出了鈑金中的 Lofted Bend 功能。 \n 4.能夠創建 Conic Fillets （圓錐倒角）。 \n 5.樣式樣條草圖命令。 \n 6.自動縮放第一個草圖。現在，在草圖上創建第一個維度時，所有實體都會自行調整大小 \n 7.以進行縮放。 \n 8.能夠配置結構成員配置文件。現在允許配置輪廓草圖，這大大改變了需要組織的文件數量。 \n 9.MySolidWorks作為能夠提供自學培訓以及所有SolidWorks的在線資源社區發布。 \n 2015年 \n 1.動態參考可視化，幫助用戶了解父/子關聯。 \n 2.引入了選擇集，以便於重複使用幾何選擇組合。 \n 3.能夠直接從SolidWorks進行3D列印。 \n 4.Simulation中的疲勞分析。 \n 5.Profile center mate（輪廓中心配合）。 \n 6.發布 SolidWorks MBD 。 \n 2016年 \n 1.用戶介面重新設計，包括更好地支持高解析度顯示器。 \n 2.藍色/灰色盤默認採用傳統配色方案。 \n 3.引入了選擇麵包屑，使相關命令更易於訪問。 \n 4.實現 Mate Controller 工具，以更加可訪問的方式捕捉裝配定位。 \n 5.能夠全局替換失敗的配合實體。 \n 6.介紹 Thread 功能。 \n 7.發布 PDM Standard （標準版）並添加到SolidWorks Professional專業版軟體包中。 \n 8.SolidWorks Visualize作為獨立的圖片渲染應用程式發布。 \n 2017年 \n 1.引入3D互連以簡化不同文件類型與SolidWorks的協作。 \n 2.Asset Publisher具有 ground plane （地層）和 magnetic mates （磁配對），可輕鬆實現 \n 3.大型裝配布局。 \n 4.引入了 Advanced Hole （高級孔）功能。 \n 5.增強了Wrap功能，可在更多類型的面選擇上創建幾何體。 \n 6.陰影草圖輪廓增強選擇和操作功能。 \n 2018年 \n 1.SolidWorks啟動時的歡迎對話框。 \n 2.用戶設置現在可以登錄。新發布的在線許可也可以遵循此登錄，在需要在多台計算機上 \n 3.使用SolidWorks時為用戶提供另一種選擇。 \n 4.選擇幾何圖形，允許用戶忽略幾何圖形並在其上選擇其他實體。 \n 5.引入了標籤和插槽功能，自動執行以前在鈑金和焊件中常用的手動方法。 \n 6.能夠鏡像3D草圖中的實體。 \n 7.首次使用筆，觸屏和基於手勢的草圖繪製功能。 \n 8.引入拓撲仿真分析。 \n 2019年 \n 1.顯著改進裝配性能。 \n 2. Silhouette defeature 命令，簡化了從模型中刪除細節以提高性能或保護智慧財產權的過程。 \n 3.能夠按狀態對mates進行分組。 \n 4.部分倒角和圓角。 \n 5.將圖像轉換為網格/凹凸貼圖，從圖像文件創建實際的3D幾何體。', 'tags': '', 'url': 'Solidworks-history.html'}, {'title': 'NX-history', 'text': '\n 1960年 \n 由 McDonnell Douglas Automation \xa0 公司成立。 \n 1976年， \n 收購了Unigraphics CAD/CAE/CAM系統的開發商——United Computing公司，UG的雛形問世。 \n 1983年 \n UG 正式 上市。 \n 1986年 \n Unigraphics 吸取了業界領先的、為實踐所證實的實體建模核心—— Parasolid 的部份功能。 \n 1989年 \n Unigraphics宣布支持 UNIX 平台及開放系統的結構，並將一個新的與STEP標準兼容的三維實體建模核心 Parasolid 引入 UG 。 \n 1990年 \n Unigraphics作為McDonnell Douglas（波音飛機公司）的機械CAD/CAE/CAM的標準。 \n 1991年 \n Unigraphics開始了從 CAD/CAE/CAM 大型機版本到工作站版本的轉移。 \n 1993年 \n Unigraphics引入 複合建模 的概念，可以實體建模、曲線建模、框線建模、半參數化及參數化建模融為一體。 \n 1995年 \n Unigraphics 首次 發布了 Windows NT 版本。 \n 1996年 \n Unigraphics發布了能自動進行干涉檢查的高級裝配功能模塊、最先進的 CAM模塊 以及具有A類曲線造型能力的工業造型模塊：它在全球迅猛發展，占領了巨大的市場份額，已經成為高端及商業CAD/CAE/CAM應用開發的常用軟體。 \n 1997年 \n Unigraphics新增了包括 WAVE （幾何連結器）在內的一系列工業領先的新增功能。WAVE這一功能可以定義、控制、評估產品模板，被認為是在未來幾年中業界最有影響的新技術。 \n 2000年 \n Unigraphics發布了新版本的 UG17 ， 最新版本 的，是UGS成為 工業界第一個 可以裝載包含深層嵌入「 基於工程知識 」（KBE）語言的世界級MCAD軟體產品的供應商。 \n 2001年 \n Unigraphics發布了新版本 UG18 ，新版本對舊版本的對話框進行了調整，使得在最少的對話框中能完成更多的工作，從而簡化了設計。 \n 2002年 \n Unigraphics發布了 UG NX1.0.新版本 繼承了UG18的優點，改進和增加了許多功能，使其功能更強大，更完美。 \n 2003年 \n Unigraphics發布了新版本 UG NX2.0 \xa0 。新版本基於最新的行業標準，它是一個全新支持PLM的體系結構。EDS公司同其主要客戶一起，設計了這樣一個先進的體系結構，用於支持完整的產品工程。 \n 2004年 \n Unigraphics發布了新版本的 UG NX3.0 ，它為用戶的產品設計與加工過程提供了數字化造型和驗證手段，。它針對用戶的虛擬產品的設計和工藝設計的需要，提供經過實踐驗證的解決方案。 \n 2005年 \n Unigraphics發布了新版本的 UG NX4.0. 它是嶄新的NX體系結構，使得開發與應用更加簡單和快捷。 \n 2007年 \n UGS公司發布了 NX 5.0 \xa0 – NX的下一代數字產品開發軟體，幫助用戶以更快的速度開發創新產品，實現更高的成本效益。 \n 2008年 \n 6月，Siemens PLM Software發布 UG NX 6.0 ，建立在新的同步建模技術基礎之上的NX 6將在市場上產生重大影響。同步建模技術的發布標誌著NX的一個重要里程碑，並且向 MCAD 市場展示 Siemens 的鄭重承諾。 NX 6將為我們的重要客戶提供極大的生產力提高。 2009年 \n 10月 – 西門子工業自動化業務部旗下機構、全球領先的產品生命周期管理（PLM）軟體與服務提供商Siemens PLM Software 宣布推出其旗艦數字化產品開發解決方案NX 軟體的最新版。 UG NX 7.0 引入了「 HD3D 」（ 三維精確描述 ）功能，即一個開放、直觀的可視化環境，有助於全球產品開發團隊充分發掘PLM信息的價值，並顯著提升其制定卓有成效的產品決策的能力。此外， NX 7.0 還 新增了同步建模技術 的增強功能。修復了很多6.0所存在的漏洞，穩定性方面較6.0有很大的提升。 \n 2010年 \n 5月20日– Siemens PLM Software在 上海世博會 發布了功能增強的NX7最新版本（ UG NX 7.5 ），NX GC 工具箱將作為NX 7最新版本的一個應用模塊與NX 7一起同步發布。NX GC 工具箱是為滿足中國用戶對NX特殊需求推出的本地化軟體工具包。在符合國家標準（GB）基礎上，NX GC 工具箱做了進一步完善和大量的增強工作。 \n 2011年 \n 9月 - Siemens PLM Software發布了 UG NX 8.0 \n 2012年 \n 10月 - Siemens PLM Software發布了 UG NX 8.5 \n 2013年 \n 10月- Siemens PLM Software發布了 UG NX 9.0 \n 2014年 \n 8月- Siemens PLM Software發布了 UG NX 10.0 \n 2016年 \n 8月- Siemens PLM Software發布了 UG NX 11.0 \n 2017年 \n 10月- Siemens PLM Software發布了 UG NX 12.0 \n', 'tags': '', 'url': 'NX-history.html'}, {'title': 'Inventor-history', 'text': '\n 是美國AutoDesk公司推出的一款三維可視化實體模擬軟件Autodesk Inventor Professional（AIP），目前已推出最新版本AIP2019。同時還推出了iphone版本，在 app store 有售。Autodesk Inventor Professional包括Autodesk Inventor三維設計軟件；基於AutoCAD平台開發的二維機械製圖和詳圖軟件AutoCAD Mechanical；還加入了用於纜線和束線設計、管道設計及PCB IDF文件輸入的專業功能模塊，並加入了由業界領先的ANSYS技術支持的FEA功能，可以直接在Autodesk Inventor軟件中進行應力分析。在此基礎上，集成的數據管理軟件Autodesk Vault-用於安全地管理進展中的設計數據。 \n 1 應用 \n 由於Autodesk Inventor Professional集所有這些產品於一體，因此提供了一個 無風險 的 二維 到 三維 轉換路徑，您能以自己的進度轉換到三維，保護的二維圖形和知識投資，並且清楚地知道自己在使用目前市場上 DWG 兼容性最強的平台。Autodesk Inventor Professional軟件是一套全面的設計工具，用於創建和驗證完整的數字樣機；幫助製造商減少物理樣機投入，以更快的速度將更多的創新產品推向市場。 \n 為 適用於設計流程的理想工具 及 滿足設計需求的專用工具 \n 2 運動仿真 \n 借助Autodesk Inventor Professional的運動仿真功能，用戶能了解機器在真實條件下如何運轉，而能節省花費在構建物理樣機上的成本、時間和高額的諮詢費用。 \n 用戶可以據實際工況添加載荷、摩擦特性和運動約束，然後通過運行仿真功能驗證設計。 借助與應力分析模塊的無縫集成，可將工況傳遞到某一個零件上，來優化零部件設計。 \n 3 增強功能仿真 \n 借助 Autodesk Inventor Professional 的 運動仿真功能 ，用戶能了解機器在真實條件下如何運轉，而能節省花費在構建物理樣機上的成本、時間和高額的諮詢費用。 \n 用戶可以據實際工況添加載荷、摩擦特性和運動約束，然後通過運行仿真功能驗證設計。 借助與應力分析模塊的無縫集成，可將工況傳遞到某一個零件上，來優化零部件設計。 \n \n （增強功能） 有輸出到應力分析中、 約束轉換、 載荷定義、可視化、點軌跡、圖示器、模型簡化、薄壁件處理、將分析數據導入ANSYS。 \n 4 布管設計 \n Autodesk Inventor? Professional可以幫助用戶節約創建管材、管件和軟管所需要的時間。 \n 使用Autodesk Inventor? Professional中規範的布管工具來選擇合適的配件，確保管路符合最小和最大長度、舍入增量和彎曲半徑這三類設計規則。 \n 5 線束設計 \n 從電路設計軟件（包括 AutoCAD Electrical 軟件）導出的導線表，Autodesk Inventor? Professional 可以接續進行電纜和線束設計。 \n 將電纜與線束（包括軟質排線）集成到數字樣機中，用戶可以準確計算路徑長度，避免過小的彎曲半徑，並確保電氣零部件與機械零部件匹配，從而節約大量時間和成本。 \n 6 CAD集成 \n Autodesk Inventor Professional能夠幫助用戶充分利用原有的AutoCAD 技能和DWG 設計數據，從而體驗數字樣機帶來的種種優勢。 \n Autodesk Inventor Professional集成了業界領先的二維和三維設計功能。 無需使用 數據轉換器 ，利用DWG TrueConvert就能直接讀寫DWG文件，同時還能保持與 三維模型 的關聯性。 \n 借助Autodesk Inventor Professional，用戶可以輕鬆訪問原有的二維信息，重複利用寶貴的設計數據。 此外，由於用戶可以將Inventor 的工程圖保存為DWG 文件，因此他們可以將從數字樣機中獲得的分析結果與那些使用AutoCAD 軟件的合作夥伴及供應商共享。 從三維零件和裝配設計中生成的視圖，如示意圖和工廠佈置圖等，也可以與AutoCAD 數據相集成。 用戶可以通過插入新的三維設計視圖來更新原有的二維工程圖，以降低升級現有設備的成本。 \n 7 零件設計 \n Inventor 可以幫助設計人員更為輕鬆地重複利用已有的設計數據，生動地表現設計意圖。借助其中全面關聯的模型，零件設計中的任何變化都可以反映到裝配模型和工程圖文件中。由此，設計人員的工作效率將得到顯著提高。 \n Inventor 可以使經常使用的自定義特徵和零件的設計標準化和系列化，從而提高客戶的生產效率。 利用Inventor 中的iPart技術，設計公司可以輕鬆設置智能零件庫，以確保始終以同種方式創建常用零件。 \n 8 鈑金設計 \n Autodesk Inventor 能夠幫助用戶簡化複雜鈑金零件的設計。 \n Inventor 中的數字樣機結合了加工信息（如沖壓工具參數和自定義的折彎表）、精確的鈑金折彎模型以及展開模型編輯環境。 在展開模型編輯環境中，製造工程師可以對鈑金展開模型進行細微的改動。 因此能夠幫助用戶提高設計鈑金零件的效率。 \n \n 9 裝配設計 \n Inventor將設計加速器與易於使用的裝配工具相結合，使用戶可以確保裝配設計中每一個零部件的安裝正確。 \n 精確地驗證干涉情況和各種屬性，以便一次性創建高質量的產品。 Inventor提供的強大工具可有效控制和管理大型裝配設計中創建的數據，因此用戶只需專心工作在所關心的部分零部件上。 \n 10 工程圖 \n Autodesk Inventor 中包含從數字樣機中生成工程設計和製造文檔的全套工具。這些工具可減少設計錯誤，縮短設計交付時間。 \n Inventor 中的自動創建視圖功能和繪圖工具將工程圖的繪製效率提高到了新的水平。 \n 此外，Inventor還支持所有主流的繪圖標準，與 三維模型 的完全關聯（在出現設計變更時，工程圖將同步更新），以及 DWG 輸出格式，因此是創建和共享DWG工程圖的理想選擇。 \n 11 數據管理 \n Inventor 使設計數據可以高效、安全的進行交換，支持不同工程相關方（包括工業設計、產品設計和製造）之間的協作。 \n 這種功能支持設計工作組管理和跟踪一個數字樣機中的所有零部件設計，幫助他們更出色地重用關鍵的設計數據、管理BOM 表、及早實現製造團隊與客戶間的協作。 \n 通過一系列全面的本地格式轉換器， Inventor具有了出色的互操作性。 在那些有部分三維數據來源於其它CAD系統的項目中，企業也可以積極參與，並滿足客戶對於其它本地格式 三維模型 的要求。 \n \xa0 \n 12 自動化 \n Inventor 可以幫助用戶從三維軟件投資中獲得最大回報。Inventor API（應用編程接口）可以自動化常用的操作，並按照設計標準和工程流程實現特有流程的自動化。 \n 借助可編輯的樣式，用戶可以創建符合標準的工程圖，向資源中心發布自定義的零件，以確保設計者在設計中使用合適的零件，從而提高設計速度和工作效率。 \n 13 學習資源 \n Inventor 提供了豐富的學習和參考資源，旨在幫助用戶掌握使用技巧，充分發揮三維設計環境的優勢。 \n 借助Inventor ，用戶可以學習新技巧，查找關於操作流程或工具的信息，獲得最新提示和訣竅。 \n 14版本歷史 \n Autodesk Inventor R1 Mustang 1999/9/20 Autodesk Inventor R2 Thunderbird 2000/3/1 Autodesk Inventor R3 Camaro 2000/8/1 Autodesk Inventor R4 Corvette 2000/12/1 Autodesk Inventor R5 Durango 2001/9 /17 Autodesk Inventor R6 Viper 2002/10/15 Autodesk Inventor R7 Wrangler 2003/4/18 Autodesk Inventor R8 Cherokee 2003/10/15 Autodesk Inventor R9 Crossfire 2004/7/15 Autodesk Inventor R10 Freestyle 2005/4/6 Autodesk Inventor R11 Faraday 2006/4/6 Autodesk Inventor 2008 Goddard 2007/4/11 Autodesk Inventor 2009 Tesla 2008/4/16 Autodesk Inventor 2010 Hopper 2009/2/27 Autodesk Inventor 2011 Sikorsky 2010/3/26 Autodesk Inventor 2012 Brunel 2011/3/22 Autodesk Inventor Professional 2013 發佈於2012 Autodesk Inventor Professional 2014 發佈於2013 Autodesk Inventor Professional 2013 發佈於2012-06-25 Autodesk Inventor Professional 2012 發佈於2011-04-15 Autodesk Inventor Professional 2011 發佈於2010-04-23 Autodesk Inventor Professional 2010 發佈於2009-04-26', 'tags': '', 'url': 'Inventor-history.html'}, {'title': 'Creo(ProE)-history', 'text': '\n Creo Parametric ，舊稱Pro/ENGINEER，是美國參數科技公司（PTC, Parametric Technology Corporation）推出的一款EDA工具，主要用於三維製圖、建模，在複雜的三維模型設計方面有優勢。該軟體是第一個運用「參數化設計」、「實體造型」「特徵導向」思想的三維設計軟體，即用有限個數的參數去約束模型，而不用擔心模型有多麼複雜。該軟體運行在WINDOWS上。 \n 為了和新的「Creo」設計工具集統一名稱，Pro/ENGINEER在2010年8月改名為「 Creo Elements/Pro 」,2011年6月再改名為「 Creo Parametric 」 \n PTC（參數科技公司）的 Creo 是整合 Pro/ENGINEER、CoCreate 和 ProductView 的豐富歷史而開發的。Creo（該詞在拉丁語中是創新的涵義）為 PTC 全新的電腦輔助工 程軟體，它是用來接替多年來的 Pro/ENGINEER 系統，Pro/ENGINEER 自 1989 年問世以 來，多年來已成為全世界最普及的 3D CAD/CAM 系統，其通用性使得 Pro/ENGINEER 的圖形檔案格式幾乎儼然是另一項泛用的標準圖形格式，自今日起 Creo 將接手昔日 Pro/ENGINEER 軟體的風采，繼續成為 3D CAD/CAM 系統的標準軟體，它可廣泛應用於 電子、通訊、機械、模具、工業設計、汽機車、自行車、航太、家電、玩具...等各行 業。Creo 可說是全方位的 3D 產品開發軟體，它整合了零件設計、產品組立、模具開 發、NC 加工、鈑金設計、鑄造件設計、造形設計、逆向工程、自動量測、機構設計、 動態模擬、應力分析、產品資料庫管理、協同設計開發等功能於一體，其模組眾多，且 功能強大，本章主要的介紹內容包括 PTC 最新產品 Creo 2.0 之概述、Creo Parametric 2.0 主操作介面、基本的檔案操作、視圖的操控、模型樹、圖層應用和系統選項等。 \n 主要特性 :\xa0 \n Pro/E第一個提出了 參數化設計 的概念，並且採用了單一數據庫來解決特徵的相關性問題。另外，它採用模塊化方式，用戶可以根據自身的需要進行選擇，而不必安裝所有模塊。 Pro/E的基於特徵方式，能夠將設計至生產全過程集成到一起，實現並行工程設計。它不但可以應用於工作站，而且也可以應用到單機上。 \n Pro/E採用了模塊方式，可以分別進行 草圖繪製 、 零件製作 、 裝配設計 、 鈑金設計 、 加工處理 等，保證用戶可以按照自己的需要進行選擇使用。 \n 1.參數化設計 \n 相對於產品而言，可以把它看成幾何模型，而無論多麼複雜的幾何模型，都可以分解成有限數量的構成特徵，而每一種構成特徵，都可以用有限的參數完全約束，這就是參數化的基本概念。 \n 2.基於特徵建模 \n Pro/E是基於特徵的實體模型化系統，工程設計人員採用具有智能特性的基於特徵的功能去生成模型如腔、殼、倒角及圓角，您可以隨意勾畫草圖，輕易改變模型。這一功能特性給工程設計者提供了在設計上從未有過的簡易和靈活，特別是在設計系列化產品上更是有得天獨到的優勢 \n 3.單一數據庫 \n Pro/Engineer是建立在統一基層上的數據庫上，不像一些傳統的CAD/CAM系統建立在多個數據庫上。所謂 單一數據庫 ，就是工程中的資料全部來自一個庫，使得每一個獨立用戶在為一件產品造型而工作，不管他是哪一個部門的。換言之，在整個設計過程的任何一處發生改動，亦可以前後反應在整個設計過程的相關環節上。例如，一旦工程詳圖有改變，NC（數控）工具路徑也會自動更新；組裝工程圖如有任何變動，也完全同樣反應在整個三維模型上。這種獨特的數據結構與工程設計的完整的結合，使得一件產品的設計結合起來。這一優點，使得設計更優化，成品質量更高，產品能更好地推向市場，價格也更便宜。 \n 4.直觀裝配管理 \n Pro/ENGINEER的基本結構能夠使您利用一些直觀的命令，例如“貼合”、“插入”、“對齊”等很容易的把零件裝配起來，同時保持設計意圖。高級的功能支持大型複雜裝配體的構造和管理，這些裝配體中零件的數量不受限制。 \n 5.易於使用 \n 菜單以直觀的方式聯級出現，提供了邏輯選項和預先選取的最普通選項，同時還提供了簡短的菜單描述和完整的在線幫助，這種形式使得容易學習和使用。 \n *歷史版本 \n \n \n \n Pro/ENGINEER Release 1.0 \n 1 \n 1987年 \n \n \n Pro/ENGINEER Release 8.0 \n 8 \n 1991年 \n \n \n Pro/ENGINEER Release 9.0 \n 9 \n 1992年 \n \n \n Pro/ENGINEER Release 10.0 \n 10 \n 1993年 \n \n \n Pro/ENGINEER Release 11.0 \n 11 \n 1993年 \n \n \n Pro/ENGINEER Release 12.0 \n 12 \n 1993年 \n \n \n Pro/ENGINEER Release 13.0 \n 13 \n 1994年 \n \n \n Pro/ENGINEER Release 14.0 \n 14 \n 1994年 \n \n \n Pro/ENGINEER Release 15.0 \n 15 \n 1995年 \n \n \n Pro/ENGINEER Release 16.0 \n 16 \n 1996年 \n \n \n Pro/ENGINEER Release 17.0 \n 17 \n 1997年 \n \n \n Pro/ENGINEER Release 18.0 \n 12 \n 1997年 \n \n \n Pro/ENGINEER Release 19.0 \n 19 \n 1998年 \n \n \n Pro/ENGINEER Release 20.0 \n 20 \n 1998年 \n \n \n Pro/ENGINEER 2000i \n 21 \n 1999年 \n \n \n Pro/ENGINEER 2000i2 \n 22 \n 2000年 \n \n \n Pro/ENGINEER 2001 \n 23 \n 2001年 \n \n \n Pro/ENGINEER Wildfire \n 24 \n 2002年 \n \n \n Pro/ENGINEER Wildfire 2.0 \n 25 \n 2004年 \n \n \n Pro/ENGINEER Wildfire 3.0 \n 27 \n 2006年 \n \n \n Pro/ENGINEER Wildfire 4.0 \n 29 \n 2008年 \n \n \n Pro/ENGINEER Wildfire 5.0 \n 31 \n 2009年 \n \n \n Creo Elements/Pro 5.0 （M065） \n 31 \n 2010年10月 \n \n \n Creo Parametric 1.0 \n 32 \n 2011年6月11日 \n \n \n Creo Parametric 2.0 \n 33 \n 2012年4月9日 \n \n \n Creo Parametric 3.0 \n 34 \n 2014年6月17日 \n \n \n Creo Parametric 4.0 \n 35 \n 2016年12月15日 \n \n \n', 'tags': '', 'url': 'Creo(ProE)-history.html'}, {'title': 'Week15-18', 'text': 'Week15查驗 \n 影片連結: https://youtu.be/zStI_0WxzIM \n \n 心得: 目前學到了，有NX、solidwork教科書，維護分組倉儲，和編輯html、css，webots操作。Solvespace 軟體很小，可以隨身攜帶，只是功能不多而已，要一點的時間去熟悉它。，webots的場景逼真又接近於現實，能模擬許多複雜的狀況，在設定上也提供了很多的範本。v-rep易於編輯零件，較好在各個零件加入感測器或機械結構，v-rep能通過應用程序接口，也就是雲端控制系統，能廣泛的應用在許多開發上，我個人傾向於使用webots，還是越逼真越有趣。 \n \n Webots導入wrl圖檔 \n 1.開啟自己在solvespace的雙輪車。 \n 2.用Export Triangle來導出wrl檔。 \n 3.開啟自己用NX12畫的雙輪車。 \n 4.匯出 > VRML > 指定存放位子。 \n 5.用webots的 File >\xa0 lmport VRML97 。 \n 6.匯入 solvespace以及NX12 的wrl檔。 \n 首先是 solvespace 的wrl檔，原本是分開的組合的零件，但是匯入進去就只有 一整個實體零件 ，所以要模擬讓輪胎滾動是不太可能的，再來匯入是 NX12 的wrl檔，顯示出來的是 各個分開的零件 ，但是跟當初的組合件不太一樣，它會分割的更仔細，這又是一個新的問題了，可是這樣就可以模擬雙輪車移動了，只是要設定好一段時間才能模擬就是了。 \n 我的教學影片: https://youtu.be/mGN6LdPV-lc \n \n \n 越野車零組件設計繪圖查驗 \n 1.先畫出基本的輪子，只要畫一個就好了。 2.再來要畫右側前、中輪子結合的連桿機構。 3.然後是畫後輪、前面的連桿、本體的結合桿。 4.最後是畫本體，因為只有單桿結合，所以要畫限制桿。 5.把全部的零件都組起來，以本體為基準來組合。 6.用Export Triangle來分別導出stl檔案以及wrl檔案。 6.分別導入webots以及v-rep，都會是一整個實體的形式。 \n 心得: 這次是要使用solvespace來設計並繪製越野車零組件，我在設計方面想的比較久，尺寸以及形狀跟範例圖，是不太一樣的，但是在架構上基本是相同的，因為是使用solvespace來繪製的，所以我在繪製的時候，耗費了許多的時間，solvespace在繪製功能上有些許的不足，導致我無法使用鏡射，再組合零件上，能約束的條件也很少，畫完存成stl檔以及wrl檔，要轉到v-rep、webots，轉出來的都是一整個實體，所以到時候還要再思考，該如何再轉檔的時候，能直接轉成各個分開的零件。 \n 我的教學影片: https://youtu.be/ZGVvMynspJI \n \n \n 越野車零組件 改為機械阻尼 \n 我的教學影片: https://youtu.be/2hmV_pxAXsY \n', 'tags': '', 'url': 'Week15-18.html'}, {'title': 'Notes', 'text': 'git基本指令 \n python基本語法 \n vi 與 vim 的指令整理 \n Dos 基本指令 \n SolveSpace的快捷鍵 \n Nx12快捷鍵 \n Video device \n Q&A', 'tags': '', 'url': 'Notes.html'}, {'title': 'git基本指令', 'text': '\n mkdir name 創建一個文檔夾 \n rm file 刪除 \n cd name 進入文檔夾 \n pwd 查看當前目錄 \n git init \xa0 把當前目錄變成 git 可以管理的倉庫 生成 .git 文檔夾 \n git add name \xa0 把文檔添加到暫存區 stage \n git commit -m “\xa0” \xa0 把暫存區所有文檔提交到 git 當前分支上（本地倉庫） \n git status \xa0 查看當前 git 倉庫狀態 \n git diff file \xa0 查看修改的文檔內容 \n git log \xa0 查看從最近到最遠的提交日誌 \n git reset --hard \xa0 版本號 \xa0回退到某版本（ HEAD 指向當前版本） \n git push origin HEAD --force 上傳目前(hard)版本 \n git reflog \xa0 查看命令操作歷史 \n git checkout -- file \xa0 \xa0 丟棄工作區文檔的修改 \n git reset HEAD file \xa0 \xa0 丟棄暫存區的文檔 \n git rm file \xa0 刪除工作區文檔後還需刪除 git 中的文檔 \n git checkout --file \xa0 恢復誤刪的 git 文檔 \n 關聯一個遠程倉庫 \xa0 git remote add origin address \n 第一次推送代碼到遠程倉庫 git push -u origin master \n （ -u 會把本地倉庫 master 分支和遠程倉庫的 master 分支 關聯起來） \n 從遠程倉庫克隆代碼到本地 git clone address \n 創建分支 git branch name \n 切換分支 git checkout name\xa0 \xa0 \xa0 \n 查看分支 git branch \n 創建分支並切換到分支上\u3000\u3000git checkout -b name \n 合併指定分支到當前分支上 git merge name \n 合併後刪除分支 git branch -d name \n 合併時出現衝突要手動解決衝突，再提交，最後合併 。 \n 將寫到一半的代碼從工作區拿走存起來 git stash \n 恢復隱藏的代碼到工作區並刪除隱藏位置的代碼 \xa0 \xa0git stash pop \n 強行刪除一個沒有合併過的分支 git branch -D name \n', 'tags': '', 'url': 'git基本指令.html'}, {'title': 'python基本語法', 'text': "● ”#”符號後是註解（comment），可以在一列的開頭或中間加入 ● reserved word or built-in function (變數取名請避開！) ○\xa0 \xa0 \xa0and, exec, not, as, finally, or, assert, for, pass, except ○\xa0 \xa0 \xa0break, from, print, class, global, raise, continue, if, return ○\xa0 \xa0 \xa0def, import, try, del, in, while, elif, is, with, else, lambda, yield ● 縮排視為不同的block (在IF判斷式或迴圈的段落中使用) ○\xa0 \xa0 \xa0縮排可以用tab或是數個空格(至少一個空格)。 ○\xa0 \xa0 \xa0空格的數量不同，視為不同的block (bug很容易因為這一點而發生) ● python的每個變數視為一個object。 \n Python variables \n ● 不需要事先宣告變數，直接用”=“ assign value（賦值）即可。 ○\xa0 \xa0 \xa0x=3.14 → 實數變數 ● 變數類型（data type）根據被賦予的值決定（之後如果被assign不同類型的數 值，該變數的類型就會直接改變） ○\xa0 \xa0 \xa0x=‘text’ → 字串變數 ● 確認變數的data type: type(x) ● 變數名稱中的大小寫要完全一致（a、A會當作不同的變數） ● python可以在同一個指令中對多個變數賦值 ○\xa0 \xa0 \xa0x, y = 2, 1 → x = 2, y = 1 ● 若想要移除變數，使用del x y ● 常見的data type: number, string, list, tuple, boolean \n Simple input/output \n ● input(“…”) 在螢幕上顯示字串，並等待使用者輸入字串 ○\xa0 \xa0 \xa0x = input (“input your name: “) \uf0e0 螢幕上會顯示訊息 input your name:， \xa0 \xa0 \xa0 \xa0使用者輸入的內容，會用字串類型存到x變數 ○\xa0 \xa0 就算使用者輸入數字，仍然是以字串類型儲存（之後會介紹如何切割字串 \xa0 \xa0 \xa0（split），轉為數值） ● print (...) 顯示在螢幕上 ○\xa0 \xa0 \xa0e.g. print (“Hello World!!”) ○\xa0 \xa0 \xa0若要一次輸出多個變數至螢幕上，直接以逗號分開 e.g. print(x,y,z) ○\xa0 \xa0 \xa0也可以format output \n Python variable types \n ● Number 數值 ○\xa0 \xa0 \xa0int : a = 11 ○\xa0 \xa0 \xa0float: a = 1.1e-18 ○\xa0 \xa0 \xa0complex: a = 4. + 7j ● String 字串 （ 用“ “ 或 ‘ ‘夾起） ○\xa0 \xa0 \xa0e.g. x = “Hello World!” or x = ‘Hello World!’ ○\xa0 \xa0 \xa0取出字串的局部：x [0:3] ■\xa0 \xa0 \xa0 \xa0 \xa0注意：index 從 0 開始計算！ ■\xa0 \xa0 \xa0 \xa0 \xa0[a:b] -- begin at index a and end before index b (e.g., x[0:3] -> “Hel”) ○\xa0 \xa0 \xa0不可以對字串的局部做更改，e.g. x[0:3] =”Yo!” (這個是錯誤的語法) ● Boolean 邏輯 ○\xa0 \xa0 \xa0只有True, False兩種值，根據邏輯判斷（IF condition）的結果決定 ○\xa0 \xa0 \xa0兩個boolean 變數做運算，會以True=1, False=0 做整數運算 \n Python variables: list and tuple \n ● list, tuple ○\xa0 \xa0 \xa0類似陣列的概念，但可以混雜儲存不同型態的資料，如下所示 ○\xa0 \xa0 \xa0List： x = [ 'abcd', 786 , 2.23, 'john', 70.2] ○\xa0 \xa0 \xa0Tuple: y = ( 'abcd', 786 , 2.23, 'john', 70.2) ○\xa0 \xa0 \xa0assignment: list 使用 [], tuple 使用(), 每個元素都用”，”分開 ○\xa0 \xa0 \xa0list 的大小及元素可以改變。tuple則不行 (類似常數陣列) ○\xa0 \xa0 \xa0sub-list 或是 sub-tuple語法類似取出字串局部： \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 x[0:2] \uf0e0 ['abcd', 786 ] \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 y[2:4] \uf0e0 (786, 2.23 ) \n Convert data type \n 有時候需要不同型態的資料轉換，例如將字串”10”轉成整數10 下列為常用的built-in function ● int (x) ● float (x) ● str (x) \n Arithmetic Operators \n ● 加法 + ○\xa0 \xa0 \xa0string 相加：形成新的字串\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ● 次方 ** ■\xa0 \xa0 \xa0 \xa0 \xa0x = “Hello”, y = “World”\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ● 取餘數 % ■\xa0 \xa0 \xa0 \xa0 \xa0c = x + y → c = “HelloWorld”\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ● 整除至最近整數 // ● 減法 -\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ○相除後取最接近的整數(整實數)， ● 乘法 *\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 結果的類型取決於兩個變數的類型： ○\xa0 \xa0 \xa0string 乘一個數字(int)：字串重複幾次\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa09//2 = 4 ■\xa0 \xa0 \xa0 \xa0 \xa0x = “Yo!”\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 9.0//2.0 = 4.0 ■\xa0 \xa0 \xa0 \xa0 \xa0y = x * 3 → y = “Yo!Yo!Yo!”\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 11.0//3 = 4.0 ● 除法 / ○\xa0 \xa0 \xa0注意：兩個整數相除，結果是實數 ■\xa0 \xa0 \xa0 \xa0 \xa0x = 21, y = 10 ■\xa0 \xa0 \xa0 \xa0 \xa0c = x / y → c = 2.1 \n Arithmetic Operators \n ● 如果要進行下面的運算 a= a+b （用a+b的結果為a重新賦值） ● 在python可以改寫成： a += b ● 所以算術運算符號可以有 \xa0 \xa0 \xa0 \xa0 +=\xa0 \xa0 \xa0-=\xa0 \xa0 \xa0*=\xa0 \xa0 \xa0/=\xa0 \xa0 \xa0%=\xa0 \xa0 \xa0**=\xa0 \xa0 \xa0//= \n Modules or package （也稱為library） \n ● ”modules” or “packages”：通常是其他人寫好的函數或指令，打包成一個「工具庫」 \xa0方便分享使用。（非python內建，可能會需要下載安裝） ○\xa0 \xa0 \xa0本課程會用到的library: numpy (array), matplotlib (基本繪圖), basemap (地圖), \xa0 \xa0 \xa0 \xa0 \xa0netCDF (讀nc檔) ● 使用方式：import module_name ○\xa0 \xa0 \xa0在執行工具庫內的指令之前，就要先把modules 引進來（不然python不會認得 \xa0 \xa0 \xa0 \xa0 非內建的指令） ○\xa0 \xa0 \xa0使用工具庫內的指令：module_name.function (or module_name.constant) ○\xa0 \xa0 \xa0可以使用import module_name as xxx (xxx是你自己取的縮寫） \xa0 \xa0 \xa0 \xa0 使用指令的語法就簡化成xxx.function，例如: \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0import math as m \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0x=m.cos(m.pi) \n", 'tags': '', 'url': 'python基本語法.html'}, {'title': 'vi 與 vim 的指令整理', 'text': '編輯模式 \n \n \n \n 指令 \n 說明 \n \n \n i \n 在游標位置進入編輯模式 \n \n \n I \n 在游標行的第一個非空白字元進入編輯模式 \n \n \n a \n 在游標位置後進入編輯模式 \n \n \n A \n 在游標行的最後一個字元進入編輯模式 \n \n \n o \n 向下新增一行，並進入編輯模式 \n \n \n O \n 向上新增一行，並進入編輯模式 \n \n \n cc \n 刪除游標行，並進入編輯模式 \n \n \n h 或 向左方向鍵 \n 游標向左移動一個字元 \n \n \n j 或 向下方向鍵 \n 游標向下移動一個字元 \n \n \n k 或 向上方向鍵 \n 游標向上移動一個字元 \n \n \n l 或 向右方向鍵 \n 游標向右移動一個字元 \n \n \n [ESC] \n 取消指令或退出編輯模式 \n \n \n \n 刪除 \n \n \n \n 指令 \n 說明 \n \n \n dd \n 刪除游標行 \n \n \n 行數 \xa0 → dd \n 刪除 n 行 \n \n \n dG \n 刪除游標行到最後一行 \n \n \n d1G \n 刪除游標行到第一行 \n \n \n d$ \n 刪除游標處到最後一個字元 \n \n \n d0 \n 刪除游標處到第一個字元 \n \n \n \n 檔案功能 \n \n \n \n 指令 \n 說明 \n \n \n :w \n 存檔 (加 ! 表示強制存檔) \n \n \n :w \xa0 檔案名稱 \n 另存新檔 \n \n \n :q \n 退出 vi (加 ! 表示不存檔強制退出) \n \n \n :wq \n 存檔並退出 vi \n \n \n : x \n 存檔並退出 vi \n \n \n :e \xa0 檔案名稱 \n 編輯其它檔案 \n \n \n :e! \n 還原至檔案編修前的狀態 \n \n \n :r \xa0 檔案名稱 \n 讀入檔案內容，並加到游標行的後面 \n \n \n :n \n 切換到下一個開啟的檔案 \n \n \n :N \n 切換到上一個開啟的檔案 \n \n \n :set nu \n 顯示行號 \n \n \n :set nonu \n 取消行號顯示 \n \n \n :files \n 列出所有開啟的檔案 \n \n \n :Ex \n 開啟檔案瀏覽器 \n \n \n :Ex \xa0 路徑 \n 於指定路徑開啟檔案瀏覽器 \n \n \n \n', 'tags': '', 'url': 'vi 與 vim 的指令整理.html'}, {'title': 'Dos 基本指令', 'text': '1. cd (Change Directory): 移動到某個資料夾 2. cd..:回上一層 3. cd\\(斜線代表「根目錄(root)):回 c 槽 4. cd 資料夾名稱:切換至某個資料夾 5. 切換到其他硬碟 d: 6. dir : 顯示資料夾底下的內容 7. dir/w: 橫向排列 8. dir/p: 分頁 9. nslookup 域名: 域名(Nomain name)查 IP 10. copy con: 建立檔案 copy con test.bat (enter) (檔案要副檔名) → this is line one (enter) (輸入內容) → this is line two (結束時 ctrl + z) (enter) 11. del 檔案名稱: 刪除檔案 12. md (Make Directery) 目錄名稱:建立目錄 13. rd 目錄名稱: 刪除一個空目錄 /s:刪除目錄下的所有子目錄和檔案 /q 取消系統詢問刪除與否的確認訊息 14. copy 原檔名 新檔名: 複製檔案 15. xcopy 原目錄名 新目錄名: 複製目錄 /D:只複製比目的檔還新的檔案 /s: 複製所有子目錄和檔案除空目錄外 16. type: 顯示檔案內容 17. ren 原檔名 新檔名:更改檔名 18. help: 顯示目前版本 DOS 的幫助資訊 19. move: 移動檔案，或重新命名一個檔案或目錄 移動檔案: move 檔案名稱 目錄名稱 重新命名檔案: move 原檔名 新檔名 重新命名目錄: move 原目錄名 新目錄名 20. 呼叫程式 exployer 檔案總管 taskmgr 工作管理員 logoff 登出 devmgmt.msc 裝置管理員 calc 計算機 control 控制台 notepad 記事本 wordpad write mspaint 小畫家 charmap 字元對應表 magnify 放大鏡 clean mgr 磁碟清理 osk 螢幕小鍵盤 msinfo32 系統資訊 compmgmt.msc 電腦管理 msconfig 系統設定公用程式 \n', 'tags': '', 'url': 'Dos 基本指令.html'}, {'title': 'SolveSpace的快捷鍵', 'text': '\n \n \n 1.文件菜單 \n \n \n Ctrl \xa0 + \xa0 N \n 新建 \n \n \n Ctrl \xa0 + \xa0 O \n 打開 \n \n \n Ctrl \xa0 + \xa0 S \n 儲存 \n \n \n \n \n \n \n \n 2.編輯菜單 \n \n \n Ctrl \xa0 + \xa0 Z \n 撤消 \n \n \n Ctrl \xa0 + \xa0 Y \n 重做 \n \n \n Space \n 全部重新生成 \n \n \n . \n 將選擇對齊到網格 \n \n \n 9 \n 旋轉導入90° \n \n \n Ctrl \xa0 + \xa0 X \n 剪下 \n \n \n Ctrl \xa0 + \xa0 C \n 複製 \n \n \n Ctrl \xa0 + \xa0 V \n 貼上 \n \n \n Ctrl \xa0 + \xa0 T \n 粘貼變形 \n \n \n Del \n 刪除 \n \n \n Ctrl \xa0 + \xa0 E \n 選擇邊緣鏈 \n \n \n Ctrl \xa0 + \xa0 A \n 全選 \n \n \n Esc \n 全部取消選擇 \n \n \n \n \n \n \n \n 3.查看菜單 \n \n \n + \n 放大 \n \n \n -- \n 縮小 \n \n \n F \n 縮放至 適合 \n \n \n W \n 將視圖與工作平面對齊 \n \n \n F2 \n 最近的正交視圖 \n \n \n F3 \n 最近的等軸測圖 \n \n \n F4 \n 視點中心 \n \n \n > \n 顯示捕捉網格 \n \n \n ` \n 使用透視投影 \n \n \n Tad \n 顯示文字視窗 \n \n \n \n \n \n \n \n 5.素描 \n \n \n 2 \n 在工作平面 \n \n \n 3 \n 3D的任何地方 \n \n \n P \n 基準點 \n \n \n S \n 線段 \n \n \n R \n 矩形 \n \n \n C \n 圓 \n \n \n A \n 圓弧 \n \n \n B \n 三次曲線樣條 \n \n \n T \n 真型字體文本 \n \n \n G \n 切換構造 \n \n \n Shift \xa0 + \xa0 A \n 點切線弧 \n \n \n I \n 在相交處分割曲線 \n \n \n \n \n \n \n \n 6.約束 \n \n \n D \n 距離/直徑 \n \n \n N \n 角度 \n \n \n U \n 其他輔助角 \n \n \n E \n 切換參考昏暗 \n \n \n H \n 設定水平 \n \n \n V \n 設定垂直 \n \n \n O \n 在點/曲線/平面上 \n \n \n Q \n 等長/半徑/角度 \n \n \n Z \n 長度比 \n \n \n M \n 在中點 \n \n \n Y \n 對稱的 \n \n \n L \n 平行/切線 \n \n \n X \n 相同方向 \n \n \n ] \n 拖延的鎖定點 \n \n \n ; \n 註解 \n \n \n \n \n \n \n \n 4.形成 \n \n \n Shift \xa0 + \xa0 3 \n 3D素描 \n \n \n Shift \xa0 + \xa0 W \n 在新工作平面中素描 \n \n \n Shift \xa0 + \xa0 T \n 逐步 放置 \n \n \n Shift \xa0 + \xa0 R \n 步進旋轉 \n \n \n Shift \xa0 + \xa0 X \n 拉伸 \n \n \n Shift \xa0 + \xa0 L \n 旋轉拉伸 \n \n \n Shift \xa0 + \xa0 I \n 導入/組裝 \n \n \n \n', 'tags': '', 'url': 'SolveSpace的快捷鍵.html'}, {'title': 'Nx12快捷鍵', 'text': '一、【文件】菜單快捷鍵 \n 1、新建 Ctrl+N \n 2、打開 Ctrl+O \n 3、保存 Ctrl+S \n 4、另存為 Ctrl+shift+A \n 5、繪圖 Ctrl+P \n 6、執行→Grip Ctrl+G \n 7、執行→Grip調試 Ctrl+shift+G \n 8、執行→NX OpenCtrl+U \n 二、【編輯】菜單快捷鍵 \n 1、撤銷列表（取消當前操作、 Ctrl+Z \n 2、剪切 Ctrl+X \n 3、複製 Ctrl+C \n 4、粘貼 Ctrl+V \n 5、刪除 Ctrl+D \n 6、變換 Ctrl+T \n 7、對象顯示 Ctrl+J \n 8、移動對象 Ctrl+Shift+M \n 9、顯示和隱藏→顯示和隱藏 Ctrl+W \n 10、顯示和隱藏→隱藏 Ctrl+ B \n 11、顯示和隱藏→顛倒顯示和隱藏 Ctrl+ shift+B \n 12、顯示和隱藏→立即隱藏 Ctrl+ shift+I \n 13、顯示和隱藏→顯示 Ctrl+ shift+K \n 14、顯示和隱藏→全部顯示 Ctrl+ shift+U \n 三、【視圖】菜單快捷鍵 \n 1、刷新 F5 \n 2、操作→適合窗口 Ctrl+F \n 3、操作→縮放 Ctrl+Shift+Z或F6 \n 4、操作→旋轉 Ctrl+R或F7 \n 5、操作→編輯工作截面 Ctrl+H \n 6、可視化→高質量圖像 Ctrl+Shift+H \n 7、信息窗口 F4 \n 8、當前對話框 F3 \n 9、佈局→新建 Ctrl+Shift+N \n 10、佈局→打開 Ctrl+Shift+O \n 11、佈局→適合所有試圖 Ctrl+Shift+F \n 12、全屏 Alt+Enter \n 四、【格式】菜單快捷鍵 \n 1、圖層 Ctrl+L \n 2、在視圖中可見 Ctrl+Shift+V \n 五、【工具】菜單快捷鍵 \n 1、表達式 Ctrl+Shift+E \n 2、宏→開始錄製 Ctrl+Shift+R \n 3、宏→回放 Ctrl+Shift+P \n 4、宏→步進 Ctrl+Shift+S \n 六、【開始】菜單快捷鍵 \n 1、建模 Ctrl+M或M \n 2、NX鈑金 Ctrl+Alt+N \n 3、外觀造型設計 Ctrl+Alt+S \n 4、製圖 Ctrl+Alt+D \n 七、【首選項】菜單快捷鍵 \n 1、對象 Ctrl+Shift+J \n 2、選擇 Ctrl+Shift+T \n', 'tags': '', 'url': 'Nx12快捷鍵.html'}, {'title': 'Video device', 'text': '我是使用ShareX 如圖(一) 來進行拍攝影片的如圖(一)，拍攝完成後再使用aegisub 如圖(二)來進行字幕的撰寫，最後再將字幕與影片融合，用arctime如圖(三)來進行融合與匯出影片的。 \n \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 圖(一) \n \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 圖(二) \n \n \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 圖(三) \n', 'tags': '', 'url': 'Video device.html'}, {'title': 'Q&A', 'text': '網頁無法顯示Brython，Spur Gear 導入錯誤，案F12來開啟Console檢查錯誤。 \n 問題(一)如下圖 \n \n 解決方法: \n 開啟本倉儲資料夾，打開flaskapp.py，案ctrl+f來找到 page_content = request.form[\'page_content\']，有2個地方都在底下加入 \n page_content = page_content.replace(\'// \xa0 <![CDATA[\', \'\') \n page_content = page_content.replace(\'// ]]> \', \'\') \n \n save後即可解決問題。 \n \n ==================================================================== \n 問題(二)如下圖 \n \n \n 解決方法: \n \n 檢查本倉儲資料夾static底下是否有brython.js與 brython_stdlib.js，沒有的話就必須加入這2個js檔案，有的話就是導入指令錯誤如: \n \n \n <!-- 導入 Brython 標準程式庫 --> \n < script \xa0 src = "./../cmsimde/static/brython.js" ></ script > \n < script \xa0 src = "./../cmsimde/static/brython_stdlib.js" ></ script > \n \n 必須改為: \n \n \n <!-- 導入 Brython 標準程式庫 --> \n < script \xa0 src = "/static/brython.js" ></ script > \n < script \xa0 src = "/static/brython_stdlib.js" ></ script > \n \n \n 即可解決顯示問題。 \n \n \n \n \n 問題(三)如下圖:\xa0 \n \n python wsgi.py 無法執行的話 \n \n \n 將start_mdecourse用編輯器打開 \n \n path= %path%; %Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%; \n 改成 \n path=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%;%path%; \n 如下圖就可以解決。 \n \n \n \n \n \n 問題(四)如下圖: \n \n 出現了亂碼的話，開啟Options。 \n \n \n \n 把cp950改成utf-8如下圖，就可以解決。 \n \n \n \n 問題(五)如圖下: \n \n 因為之前putty是ipv6 ，現在網路改成ipv4，所以putty要改成None(如下圖)。 \n', 'tags': '', 'url': 'Q&A.html'}, {'title': 'Organize books', 'text': '2015- Space Modeling with SolidWorks and NX https://link.springer.com/book/10.1007/978-3-319-03862-9 \n NX 12 for Engineering Design http://mde.tw/cad2019/downloads/NX-12-for-Engineering-Design.pdf \xa0 \n', 'tags': '', 'url': 'Organize books.html'}, {'title': 'Space Modeling with SolidWorks and NX', 'text': 'Space Modeling with SolidWorks and NX 重點整理.pdf \n 這本書通過一系列循序漸進的教學，使讀者了解空間在工程師的抽象世界中的重要性以及創建產品模型的能力虛擬空間中的技能，這對需要在專業環境中，提出特定產品的任何設計師或工程師來說，這項技能都是必不可少的。 \n 練習是在邏輯上從簡單到復雜的。儘管使用 SolidWorks 或是 NX 軟件，但基本原理適用於所有繪圖軟件。在每種情況下，解釋都涵蓋了從基本概念和生產能力到實際模型的整個過程。還清楚地說明了從 3D 模型到 2D 製造圖的轉換。 \n 本書的主題包括棱柱，軸對稱，對稱和復雜形狀的建模；使用建模軟件對物理模型進行數字化；從物理模型開始創建 CAD 模型；自由曲面造型按照自下而上和自上而下的原則對產品裝配進行建模；並按照技術文件規則展示產品。這本書包含 500 多個圖形，是對於希望掌握空間建模技術的學生來說是理想的選擇。這一本書是出色的教學和研究輔助工具，並且是易於使用的引導指南。 \n 第一章:  為教室中的工作場所提供的各種佈局，允許導師和學生之間進行交流。隨 後介紹了在研發（R＆D）過程中可能會發生變化的各種形式的工程圖形。該研 發過程包括研究和戰略部分的三個循環，以及開發階段的黃金循環。指定了從 草圖到工作文檔的圖形表達方式，並直接與研發過程的各個階段聯繫在一起。    (R＆D)意思:研究發展(Research and Design)一共區分為六個層級 1.基本研究 2.應用 3.技術開發 4.產品設計 5.製程開發 6.製程改進    第二章:   說明了草圖對於將想法從工程師的抽象世界中初步轉移起重要作用。也介紹 了 2D 和 3D 素描技術，以及素描過程中手的運動功能的詳細信息。是一個特殊部 分涵蓋了工程圖製作草圖的階段。    第三章:   空間建模使用幾何拓撲元素。本章介紹了所有基本拓撲元素，以及平移，旋 轉，縮放，鏡像和透視圖的矩陣演算。還有空間建模的關鍵操作。拓撲空間是一 種數學結構，可以在上頭形式化地定義出如收斂、連通、連續等概念。拓撲空間 在現代數學的各個分支都有應用，是一個居於中心地位的、統一性的概念。拓撲 空間有獨立研究的價值，研究拓撲空間的數學分支稱為拓撲學。      第四章:  3D 建模軟件包，本章是主要是介紹空間建模的技術功能。由通過兩個建模 器（SolidWorks 2014 和 Siemens NX 9.0）介紹了該方法。簡要介紹菜單的結構 和主要的子菜單命令。可以對命令和訪問單個命令的結構有一個全面的了解，這對於之後的使用和理解過程非常有幫助。這樣的結構提供了程序和用戶之間通信 的全面概述和理解。    第五章:   敘述擠壓是形成棱柱體的基礎。為了使讀者熟悉為什麼將此功能顯示為基本 建模功能，第一個子章節涉及工業示例中的擠出。描述了在平面上定義基本草 圖並形成確定的（或不確定的）拉伸量的概念。 本章以幾個典型的擠出示例作 為結束。    第六章:   解釋旋轉對於車削零件，球形拋光和許多其他球形形式（陶罐，圓形玻璃等）得重要性。它從基本草圖開始。旋轉可以是固定的，也可以使其開放以提供其他 功能。提出了不同的方法，包括在特定創建的平面上進行鏡像。使用各種重要元 素和形狀針對不同目的研究了軸示例。代表特徵機械要素（例如、車輪、軸、皮 帶輪、皮帶輪、螺栓等）的軸對稱模型通常是通過車削過程生成的。在這裡，我 們通過旋轉對它們進行建模。建立軸對稱模型的起點與建立棱柱模型的起點相似。 在這裡，我們還首先繪製橫截面輪廓（例如軸）的草圖，然後繞其軸旋轉。旋轉 軸通常是所選坐標系的 x 軸。由於這是一個軸對稱模型，因此我們可以僅使用一 半的橫截面並將其圍繞所需的軸旋轉以獲得實體。用工程語言，我們可以說模型 圍繞中心線旋轉，該中心線表示草圖中的局部坐標軸之一。有幾種創建這種模型 的方法。在本章中，我們將介紹相對複雜形狀的最簡單方法。練習還為這些複雜 形狀提供了不同的方法。使用此處介紹的 SolidWorks 和 NX 製作的方法，讀者可 以輕鬆地確定各個步驟。    第七章:   是再說曲線掃描代表一種重要的通用形式，用於定義不同橫截面的空間形狀， 並沿預定曲線變化。此功能對於創建管道和其他自由形式的線性輪廓特別有用。 它適用於不同的示例，例如彈簧或照明設備，證明了其普遍適用性。複雜形狀的 示例顯示了在不同行業領域中的可能應用。    第八章:  沿曲線在不同橫截面上的過渡對於定義螺旋形狀（即通常為水力形狀）很重 要。在本章中，專門定義了液壓機，氣動鼓風機，進氣歧管，低壓鼓風機等典型的螺旋形殼體的形狀。這些示例顯示了特殊影響的證據，連續橫截面的定義不明確等。    第九章:  主要是由倒角，邊緣融合和可擠壓表面定義的特殊細部形狀是任何細部設 計的關鍵部分。對於前面各章中涉及的所有形狀，將介紹在不同的模型和技術上使用補充形狀的情況。本章包括所呈現功能的細節，這些特徵對於頂層設計， 特別是對於創建非實體產品的照片非常重要。到目前為止，我們已經討論了相 對粗糙的產品形狀的建模。這些形狀未包括在實踐中使用的具體細節，並且未考慮其結構方面的技術和詳細形狀。他們還表達了產品的完美，這就是卓越。下面我們將介紹詳細形狀的建模，通常是由於使用某些技術導致的。這種類型的建模在不同的環境中具有不同的名稱：從組合形狀到復雜形狀，再到 X 技術 設計。實際上，應該通過遵循真實的產品和真實的技術過程來創建所有細節的模型。    第十章:  解釋焊接產品是一種特殊的設計案例。儘管前幾章中的功能專門用於軋製， 壓鑄和塑料材料的注射，但是焊接對於承重結構很重要。這就是為什麼提供能 真實顯示焊接細節（定義要焊接的材料的體積，焊縫的長度等）的特徵之所以重要的原因。詳細介紹了兩個概念，即焊縫的自動（預設）和特定（詳細，特殊）設計。這為我們提供了在單個鋼結構上使用兩個概念，從而對真實環境或形狀進行建模的可能性。    第十一章:  因為由於具有高度的可重複性，並且在功能上相對便宜，因此，當今的鈑 金產品在使用方面具有明顯的優勢。除了邊緣和折疊細節之外，鈑金產品還需 要一些重要的細節來定義展開的鈑金。在本章中，請注意在使用自動默認設置 [彎曲半徑和其他材料(彈性模塊 E)]時用戶應注意的細節。預先定義了兩種 用於定義鈑金零件的方法:(1)來自蓋子或(2)來自固體材料。    第十二章:   講述當使用標準零件或來自具有相同主要功能但變化的載荷以及間接改變 尺寸的一系列產品的零件時，單個零件的參數化至關重要。通過使用表格或測 量值已知這些方法。在每種情況下，都將介紹該過程以及為什麼應直接應用特 定參數的原因以及應使用功能的不同值的原因。提出了從傳統到現代激光測量 儀器的各種數字化方法。    第十三章:   最後兩章專門介紹創建工作文檔的技術。本章介紹了自下而上和自上而下 的技術。提出了用於理解的理論模型，以及與功能抽象的聯繫，應該對每種產 品或組件分別執行。再次顯示帶有軸承的軸的模型，然後說明如何將其覆蓋並 將其安裝在殼體中。這個軸的例子證明了這兩種方法在邏輯上是互補的，而不 是相互排斥的。    第十四章:   本章為兩個建模者提供了詳細的技術，這些技術對於根據技術文檔的標准 進行高質量的演示是必不可少的。目的是提出任何設計人員都可能遇到的問題， 然後提出通過不同技術克服這些問題的工具，以便獲得最終產品，即技術文檔 （製造圖）。還介紹了一種可能尚未完善的使用兩個建模器來創建詳細的工作文 檔的技術，將來這將需要更精確的編程。但是，這樣的信息對於用戶來說非常 有用並且是必要的，以便使他或她免於搜索合適的菜單。    第十五章:  技術文檔包括有關產品的所有信息，並以計劃或圖紙作為其關鍵要素。工 程師將計劃或工程圖作為關鍵信息，然後根據計劃獲取信息。本章介紹了製作 特定細節的圖紙的能力和偏差，這些細節顯著地限定了特定建模者的質量。由 於開發階段的差異，仍然有一些關鍵信息和消息可以使計劃符合條件，但不幸的是它們尚未包含在標準軟件中。如果將來的發展包括將技術文檔的國際標準 納入建模人員，那麼它不僅會簡化，而且最重要的是會提高總體技術文化。本章將介紹現有軟件中的一些典型偏差。 ', 'tags': '', 'url': 'Space Modeling with SolidWorks and NX.html'}, {'title': 'NX 12 for Engineering Design', 'text': '3.5.1操作影片: https://www.youtube.com/watch?v=zndBktSifZo \n \n 3.5.2操作影片 : https://www.youtube.com/watch?v=nUUUWjApzGo \n \n 3.5.3操作影片: : https://www.youtube.com/watch?v=rYRSXIGMAJY \n \n 3.6.1操作影片: : https://www.youtube.com/watch?v=WiH8L8T1Yy8 \n \n 4.10.2操作影片: : https://www.youtube.com/watch?v=RFc2XHfnamc \n \n', 'tags': '', 'url': 'NX 12 for Engineering Design.html'}, {'title': '第一章-簡介', 'text': 'CH1 介紹 \n 現代製造環境的特徵在於交付範式 在不斷增加的背景下，品種不斷增加，批次更小，質量更高的產品 全球競爭。除非引進新的產業，否則它們將無法在全球競爭中生存 產品質量更高，成本更低，交付週期更短。有激烈 國際競爭和熟練勞動力的減少。隨著變化 計算能力和更廣泛的設計和生產軟件工具可用性，工程師們 現在使用計算機輔助設計（CAD），計算機輔助製造（CAM）和計算機 輔助工程（CAE）系統可使其設計和生產過程自動化。這些 現在，技術每天都用於各種不同的工程任務。下面是一個簡短的 產品期間如何使用CAD，CAM和CAE技術的說明 實現過程。 \n \n 1.1產品實現過程 \n  產品實現過程可以大致分為兩個階段：設計和製造。 設計過程從識別新客戶需求和要設計的變量開始 改進，由營銷人員從 顧客。一旦收集了相關的設計信息，就制定了設計規範。 進行可行性研究並提供相關設計信息以及詳細的設計和分析 執行。詳細設計包括設計概念化，預期產品 圖紙，草圖和幾何建模。分析包括壓力分析，干擾 檢查，運動學分析，質量特性計算和公差分析以及設計 優化。從這些活動中獲得的結果的質量與 分析的質量以及進行分析的工具。 製造過程從生產開始的車間活動開始 規劃，使用設計過程圖並以實際產品結束。處理 規劃包括生產計劃，材料採購和機器等活動 選擇。有各種各樣的任務，例如購買新工具，NC編程和質量 在生產過程的各個階段進行檢查。流程計劃包括所有計劃 \n 產品製造中使用的過程。通過質量控制檢查的零件 進行功能測試，包裝，貼標籤並運送給客戶。 表示產品實現過程的圖（Ibrahim Zeid撰寫的Mastering CAD / CAM， 麥格勞·希爾（McGraw Hill，2005）。 \n \n \n 1.2 CAD / CAM開發的簡要歷史 \n 當前的CAD / CAM技術的起源可以追溯到文明的開始 古埃及的工程師認可圖形通信。正交投影實踐 今天是在1800年代發明的。 CAD / CAM系統的真正開發始於 1950年代。 CAD / CAM在上個世紀經歷了四個主要的發展階段。 1950年代 被稱為交互式計算機圖形時代。麻省理工學院伺服機構實驗室 在三軸銑床上演示了數控（NC）的概念。發展歷程 在這個時代，由於當時計算機的缺點而放慢了速度。 1950年代後期 \n 開始開發自動編程工具（APT），並探索通用汽車公司 互動圖形的潛力。 1960年代是交互式計算機圖形學最關鍵的研究時期。伊万·薩瑟蘭 開發了一個畫板系統，該系統演示了創建圖紙的可能性以及 在陰極射線管（CRT）上以交互方式進行對象交替。 CAD一詞開始出現 “設計”一詞超出了基本的製圖概念。通用汽車宣布了他們的 DAC-1系統和Bell Technologies推出了GRAPHIC 1遠程顯示系統。 1970年代，計算機圖形學的前十年研究開始 富有成果，並實現了交互式計算機圖形在提高生產力方面的潛力 按行業，政府和學術界。 1970年代被描述為計算機的黃金時代 起草和特別儀器設計應用程序的開始。國家計算機 圖形協會（NCGA）成立，並且初始圖形交換規範（IGES） 開始了。 在1980年代，新的理論和算法得到了發展，並且將各種設計要素整合在一起 並發展了製造業。主要的研發重點是擴大 CAD / CAM系統超越了三維幾何設計，提供了更多的工程設計 應用程序。 當前的CAD / CAM開發側重於高效，快速的集成和自動化 設計和製造的各種要素以及新算法的開發。 有許多商業化的CAD / CAM軟件包可用於用戶友好的直接使用 而且非常熟練 以下是當前市場中的一些商業軟件包。 •Solid Edge，AutoCAD，Inventor和TurboCAD是一些負擔得起的CAD軟件 系統。 •NX，Pro-E，CATIA和SolidWorks是高端建模和設計軟件 更昂貴但功能更強大的系統。這些軟件系統還具有計算機 輔助的製造和工程分析功能。 •Onshape和Fusion 360是基於雲的CAD軟件，可提供CAD功能 通過用戶的瀏覽器。 \n •ANSYS，ABAQUS，NASTRAN和COMSOL是主要用於CAE的軟件包 目的。 \n \n 1.3 CAD / CAM / CAE的定義   \n 以下是本教程中使用的一些術語的定義。  1.3.1計算機輔助設計– CAD   CAD是與使用計算機系統協助創建，修改， 分析和優化設計。任何體現計算機圖形的計算機程序 可以對在設計過程中促進工程功能的應用程序進行分類 作為CAD軟件。 CAD的最基本作用是定義設計的幾何形狀-機械零件，產品 組裝，建築結構，電子電路，建築物佈局等。 CAD系統的好處是可以節省大量時間並減少由 否則，每次需要時，都必須從頭開始重新定義設計的幾何形狀。 \n 1.3.2計算機輔助製造– CAM   CAM技術涉及計劃，管理和控制製造的計算機系統 通過計算機界面與工廠的生產資源進行操作。 CAM最重要的領域之一是數控（NC）。這是使用的技巧 用於控制機床的程序化指令，該機床可以進行原始的切削，銑削，磨削，沖壓或車削 庫存成成品。 CAM的另一個重要功能是在機器人編程中。 流程計劃也是計算機自動化的目標。 \n \xa0 \n 1.3.3計算機輔助工程– CAE   CAE技術使用計算機系統來分析CAD創建的產品的功能， 允許設計師模擬和研究產品的行為，以便設計 完善和優化。 CAE工具可用於許多不同類型的分析。例如運動學 分析程序可用於確定機構中的運動路徑和連桿速度。 動態分析程序可用於確定複雜結構中的載荷和位移 裝配，例如汽車。最受歡迎的分析方法之一是使用有限 \n 元素方法（FEM）。該方法可用於確定應力，變形，傳熱， 磁場分佈，流體流動以及其他通常很難解決的連續磁場問題 用其他方法解決。 \n \n \xa0 1.4。本教程的範圍   \n 本教程是為有興趣學習如何使用NX 12的學生和工程師編寫的 用於設計機械零件和組件。學習使用NX 12也將很有價值 學習如何使用其他CAD系統，例如PRO-E和CATIA。本教程提供了 學習NX 12的系統方法。 第2章介紹了從開始會話到熟悉NX的NX 12基本知識。 通過練習基本功能（如打印，保存和退出）來佈局12。它還給出了簡短的描述 坐標系，圖層，各種工具箱和其他重要命令 在後面的章節中使用。 第3章介紹了素描的概念。它描述瞭如何創建草圖並給出 幾何和尺寸約束。從今天開始，這一章非常重要 組件的幾何形狀非常複雜，僅憑基本特徵很難建模。 零件的實際設計和建模始於第4章。它描述了不同的功能 例如參考特徵，掃描特徵和原始特徵，以及如何使用這些特徵 創建設計。對特徵執行各種特徵操作。 您將在第5章中學習如何從零件模型創建工程圖。在本章中，我們將 通過添加視圖，標註零件圖紙尺寸來演示如何創建圖紙，以及 修改圖形中的各種屬性，例如文本大小，箭頭大小和公差。 第6章介紹了裝配建模的概念及其術語。它描述了TopDown建模和Bottom-Up建模。我們將使用自下而上的模型進行組裝 組件變成產品。 第7章介紹了自由格式建模。曲線和平滑曲面的建模方法 將被演示。 第8章概述了NX 12中提供的Design Simulations的簡要介紹。 有限元分析。 \n 第9章將是在製造中實施設計模型的實時經驗 加工環境。本章介紹工具的生成，驗證和模擬 創建CNC（計算機數字代碼）以從多軸生產設計零件的路徑 甚至先進的CNC機器。 每章中使用的示例和練習問題都經過精心設計，以使它們最終得以應用 組裝在本章中。由於這項獨特的功能，您應該保存所有的模型 在每一章中都有創建。', 'tags': '', 'url': '第一章-簡介.html'}, {'title': '第二章-入門教學', 'text': '', 'tags': '', 'url': '第二章-入門教學.html'}, {'title': '第三章-二維草圖', 'text': '\n', 'tags': '', 'url': '第三章-二維草圖.html'}, {'title': '第四章-三維建模', 'text': '\n', 'tags': '', 'url': '第四章-三維建模.html'}, {'title': '第五章-基本草圖', 'text': '\n', 'tags': '', 'url': '第五章-基本草圖.html'}, {'title': '第六章-組配建模', 'text': '\n', 'tags': '', 'url': '第六章-組配建模.html'}, {'title': '第七章-曲面建模', 'text': '\n', 'tags': '', 'url': '第七章-曲面建模.html'}, {'title': '第八章-有限元素分析', 'text': '\n', 'tags': '', 'url': '第八章-有限元素分析.html'}, {'title': '第九章-程式編寫與模擬', 'text': '重點整理以及操作: NX12-第九章.pdf', 'tags': '', 'url': '第九章-程式編寫與模擬.html'}, {'title': 'CAD software', 'text': 'AutoCAD \n \n Inventor \n \n Solidworks \n \n solvespace \n \n NX \n \n Onshape \n \n Creo (Pro/E) \n', 'tags': '', 'url': 'CAD software.html'}, {'title': 'AutoCAD', 'text': '教科書: Tutorial Guide to AutoCAD 2018.pdf \n 官方載點: https://www.autodesk.com.tw/products/autocad/free-trial \n 教學影片: \n \n \n \n', 'tags': '', 'url': 'AutoCAD.html'}, {'title': 'Inventor', 'text': '教科書: Tutorial Guide to Inventor 2017.pdf \n 官方載點: https://www.autodesk.com/products/inventor/free-trial \n 教學影片: \n \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Inventor.html'}, {'title': 'Solidworks', 'text': '教科書: SOLIDWORKS 2017 Tutorial.pdf \n 學校載點: http://mde.tw/cad2019/content/Solidworks.html \n 教學影片: \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Solidworks.html'}, {'title': 'solvespace', 'text': '教科書: SolveSpace - Learning Guide.pdf \n 官方載點: http://solvespace.com/download.pl \n 教學影片: \n \n \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0', 'tags': '', 'url': 'solvespace.html'}, {'title': 'NX', 'text': '教科書: NX-12-for-Engineering-Design.pdf \n 學校載點: http://mde.tw/cad2019/content/NX.html \n 教學影片: \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'NX.html'}, {'title': 'Onshape', 'text': 'Onshape為線上免費3D建模平台，只要創建帳號即可使用。 \n 教科書: Getting Started with onshape.pdf \n 官網: https://www.onshape.com/ \n 教學影片: \n \n \n \n \n \n \n', 'tags': '', 'url': 'Onshape.html'}, {'title': 'Creo(ProE)', 'text': '教科書: Tutorials for Pro/Engineer Wildfire 2.0 \n 官網載點: https://www.ptc.com/tw/try-and-buy/free-trials \n 教學影片: \n \n \n \n \n \n', 'tags': '', 'url': 'Creo(ProE).html'}, {'title': 'About', 'text': '個人倉儲網址: https://github.com/s40723210/cad2019 \n 個人blogger: https://40723210.blogspot.com/ \n 個人youtube: https://www.youtube.com/channel/UC8l7lxn3l0ENuxYDhLjgxRw \n *我有導入無法將文字選取起來的javascript，並不是bug。 \n \n 此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules \xa0 https://github.com/mdecourse/newcms.git \n \n Develop \n https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'About.html'}]};