<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>錄影裝置</h1>
<p>我是使用ShareX<span>如圖(一)</span>來進行拍攝影片的如圖(一)，拍攝完成後再使用aegisub<span>如圖(二)來進行字幕的撰寫，最後再將字幕與影片融合，用arctime如圖(三)來進行融合與匯出影片的。</span></p>
<p><img alt="" height="215" src="/images/header.jpg" width="460"/></p>
<p>                                                                            圖(一)</p>
<p><img alt="" height="225" src="/images/images.jpg" width="225"/></p>
<p>                          圖(二)</p>
<p></p>
<p><img alt="" height="225" src="/images/images.png" width="225"/></p>
<p>                      圖(三)</p><h1>每週主題</h1>
<h4 class="post-title entry-title" itemprop="name">建立個人cad2019倉儲</h4>
<p><span>1.下載<a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view?usp=sharing">2019Fall可攜套件.7z</a>，完成後開啟start。</span><span><br/></span><span></span><span><span>2.先登入自己的github帳號，</span><span>創建一個新的倉儲cad2019。</span></span><span><span><br/></span><span>3.進入要存放該資料的資料夾tmp。</span></span><span><span><br/></span></span><span></span><span><span>4.git clone </span><span>https://github.com/s40723210/cad2019 。</span><span><br/></span><span>5.</span><span>git submodule add https://github.com/mdecourse/cmsimde.git。</span></span><span><span><br/></span></span><span></span><span><span>6.再進入cmsimde，輸入python -m pip install flask_cors。</span></span><span><span><br/></span></span><span></span><span><span>7.完成後，python wsgi.py 開始編輯倉儲。</span></span><span><span><br/></span></span><span></span><span><span>8.login密碼為admin，gitconfig要有帳號密碼。</span></span><span><span><br/></span></span><span><span>9.處理完，git status &gt; git add . &gt; git commit -m "標題" &gt; git push。</span></span><span><span><br/></span></span><span><span>10.開啟github倉儲設定，點選要推送的branch即可。</span></span></p>
<p><span>我的教學影片:</span><a href="https://youtu.be/ta6FqOT-EHQ">https://youtu.be/ta6FqOT-EH<br/></a><a href="https://youtu.be/ta6FqOT-EHQ"><br/><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ta6FqOT-EHQ" width="560"></iframe><br/></a></p>
<hr/>
<h4>Solvespace 編譯</h4>
<div><span></span></div>
<div>
<div><span>1.將Y:\portablegit\bin\sh.exe的sh.exe改成 &gt; sh_rename_for_solvespace.exe。</span></div>
<div><span><span>2.到tmp下git clone --recurse-submodules https://github.com/solvespace/solvespace.git 。</span></span></div>
<div><span><span>3.進入tmp下的solvespace\extlib\angle\CMakeLists.txt。</span></span></div>
<div><span><span>4.將CMakeLists.txt中的第713 and 714行前面加上#。</span></span></div>
<div><span><span>5.</span>cd solvespace/extlib/libpng &gt; <span>mkdir build &gt; cd build。</span></span></div>
<div><span><span>6.cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release &gt; mingw32-make。</span></span></div>
<div><span><span>7.</span>把libpng.dll.a 改名為 libpng_static.a 並放到Y:/msys64\mingw64\lib。</span></div>
<div><span>8.在solvespace建立build資料夾，在cd build。</span></div>
<div><span>9.cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release &gt; mingw32-make。</span></div>
<div><span>10.到bin內開啟solvespace程式，把需要的檔案從Y:/msys64\mingw64\bin拿。</span></div>
</div>
<p><span>我的教學影片(有字幕):<a href="https://youtu.be/s5Onnb9CPSI">https://youtu.be/s5Onnb9CPSI<br/></a><br/></span><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/s5Onnb9CPSI" width="560"></iframe></span></p>
<hr/>
<h4 class="post-title entry-title" itemprop="name">解決cmake .. -G的Erro</h4>
<p><span>在用cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release執行時，碰到了</span><span>Y:/msys64/mingw64/bin/gcc.exe -- broken，無法執行的時候，是因為在路徑上有中文字，才讓程式出現錯誤的，以下是我的如何處理的影片。</span></p>
<p><span>我的教學影片(有字幕):</span><span><a href="https://youtu.be/yS-NvOgfCRY">https://youtu.be/yS-NvOgfCRY</a><a href="https://youtu.be/yS-NvOgfCRY"><br/></a></span><br/><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/yS-NvOgfCRY" width="560"></iframe></p>