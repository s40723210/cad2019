<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>s40723210 網誌</title><link href="./" rel="alternate"></link><link href=".%5Cfeeds/all.atom.xml" rel="self"></link><id>./</id><updated>2019-11-29T16:00:00+08:00</updated><entry><title>Week12</title><link href=".%5CWebots%20and%20V-rep%20Tutorial.html" rel="alternate"></link><published>2019-11-29T16:00:00+08:00</published><updated>2019-11-29T16:00:00+08:00</updated><author><name>s40723210</name></author><id>tag:None,2019-11-29:.\Webots and V-rep Tutorial.html</id><summary type="html">&lt;p&gt;Webots 與 V-rep Tutorial的操作說明及影片&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Webots 與 V-rep Tutorial的操作說明及影片&lt;/p&gt;


&lt;h2&gt;Webots Tutorial-1&lt;/h2&gt;
&lt;p&gt;1.創建一個新目錄和世界，都要改名子。&lt;/p&gt;
&lt;p&gt;2.開始設定地板的格子與外牆的高度。&lt;/p&gt;
&lt;p&gt;3.加入一個木箱並且調整大小和高度。&lt;/p&gt;
&lt;p&gt;4.複製出三個木箱並且移動到牆角，儲存世界。&lt;/p&gt;
&lt;p&gt;5.再來要添加一台e-puck機器，儲存後模擬。&lt;/p&gt;
&lt;p&gt;6.使用alt+左鍵拖移，來測試施加外力狀況。&lt;/p&gt;
&lt;p&gt;7.設定木箱的物理重量，才能夠施加外力。&lt;/p&gt;
&lt;p&gt;8.創建控制器程式(python)，名子一樣要改。&lt;/p&gt;
&lt;p&gt;9.修改程式碼後，更改e-puck的controllers。&lt;/p&gt;
&lt;p&gt;10.完成後儲存，即可照著腳本進行移動。&lt;/p&gt;
&lt;p&gt;我的教學影片(有字幕):&lt;a href="https://youtu.be/zINF95Z_b1s"&gt;https://youtu.be/zINF95Z_b1s&lt;/a&gt;
&lt;iframe width="700" height="400" src="https://www.youtube.com/embed/zINF95Z_b1s" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2&gt;V-rep bubbleRob Tutorial&lt;/h2&gt;
&lt;p&gt;1.點選Add&amp;gt;Primitive shape&amp;gt;Sphere來創建球體。&lt;/p&gt;
&lt;p&gt;2.再來Add&amp;gt;Proximity sensor&amp;gt;Cone type創建感測器。&lt;/p&gt;
&lt;p&gt;3.將兩者都設定好，改名並將感測器拖移至球體分支下。&lt;/p&gt;
&lt;p&gt;4.加入左右輪並設定其座標位子，再加入一顆小球當支點。&lt;/p&gt;
&lt;p&gt;5.將三者改名及設定參數後，每個都增加動力源並設好座標。&lt;/p&gt;
&lt;p&gt;6.一樣三個都要在球本體(bubbleRob)的分支下，才能相互作用。&lt;/p&gt;
&lt;p&gt;7.再來要設定出球本體運動時的動態圖表，有許多設定。&lt;/p&gt;
&lt;p&gt;8.創建出數個圓柱體形障礙物將球本體給圍繞起來。&lt;/p&gt;
&lt;p&gt;9.新增攝像頭讓球本體移動時，就可以看到它的前視的影像。&lt;/p&gt;
&lt;p&gt;10.將球本體的程式碼功能打開，並且將程式碼複製貼入進去。&lt;/p&gt;
&lt;p&gt;11.這樣子球本體就會在感測器照到物體時往後退並且迴避。&lt;/p&gt;
&lt;p&gt;我的教學影片(有字幕):&lt;a href="https://youtu.be/BStp8J-KXuY"&gt;https://youtu.be/BStp8J-KXuY&lt;/a&gt;
&lt;iframe width="700" height="400" src="https://www.youtube.com/embed/BStp8J-KXuY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2&gt;使用心得:&lt;/h2&gt;
&lt;p&gt;目前使用下來，我覺得webots比較好用，webots的場景逼真又接近於現實，而且也能模擬許多複雜的狀況，在設定上也提供了很多的範本，控制器程式就在旁邊也易於更改。相較之下v-rep的逼真度就比較弱，雖然比webots還易於編輯零件，也比較好在各個零件加入一些感測器或機械結構，可是要一個一個定義也是很麻煩的，模擬上不會說比webots還要差很多，可是v-rep的遠端控制，就贏了webots許多，v-rep能通過應用程序接口，也就是雲端控制系統，能廣泛的應用在許多開發上，解論我個人傾向於使用webots，還是越逼真越好，這樣才是開發者想要的。&lt;/p&gt;</content><category term="2018FallCP"></category></entry><entry><title>Week10</title><link href=".%5Cfork%20and%20pull%20requests.html" rel="alternate"></link><published>2019-11-15T16:00:00+08:00</published><updated>2019-11-15T16:00:00+08:00</updated><author><name>s40723210</name></author><id>tag:None,2019-11-15:.\fork and pull requests.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h2&gt;pull requests&lt;/h2&gt;
&lt;p&gt;各組開始協同倉儲，因為我是組長就創建第五組倉儲，並且回報lssues，所有的組員都必須要fork分組倉儲，然後使用pull requests來進行更新，也要處理並解決網址、簡報、網誌出現的 markdown 改版衝突，而pull requests有分為正向及反向。&lt;/p&gt;
&lt;p&gt;組員擁有(merge)的權力，也就是可以自己進行pull request，不需要經過組長的同意，就可以直接合併(merge)，不過這樣就會出比較多的問題，可能有些人更改的內容直接被蓋掉，要解決的話可能會出現很多衝突，所以不建議給太多人擁有(merge)權力，像是我只有給一位組員(merge)權力，這樣子他就可以幫我審核，其他組員的pull request，也能幫我進行同意合併。&lt;/p&gt;
&lt;p&gt;pull requests正向是組員點選New pull request將資料推送回各組倉儲，再由組長進行審核，確認無誤之後即可按同意來合併，有衝突時，組員必須回到fork倉儲，輸入git pull "fork倉儲網址"，再New pull request一次，組長同意後即可。&lt;/p&gt;
&lt;p&gt;pull requests反向一樣是組員點選New pull request，不過要特別改成分組倉儲退送至個人倉儲，意思就是把個人的倉儲版次更新，然後在自己點選同意，不過這樣子比較麻煩，還不如直接輸入git pull "fork倉儲網址"，這樣子比較快，直接就更新到最新版次。&lt;/p&gt;
&lt;p&gt;第五組倉儲網址:https://s40723210.github.io/cad2019bg5/&lt;/p&gt;
&lt;h2&gt;Fork倉儲&lt;/h2&gt;
&lt;p&gt;1.先登入github，在搜尋自己組的倉儲，點進去。&lt;/p&gt;
&lt;p&gt;2.點選右上角的Fork，選擇自己的github。&lt;/p&gt;
&lt;p&gt;3.git clone --recurse-submodules (倉儲網址)。&lt;/p&gt;
&lt;p&gt;4.git push完成，點選New pull request，等組長同意。&lt;/p&gt;
&lt;p&gt;5.有衝突的話，進行git pull (倉儲網址) 。&lt;/p&gt;
&lt;p&gt;6.整合完成之後即可git push，等待組長同意。&lt;/p&gt;
&lt;p&gt;我的教學影片(有字幕):&lt;a href="https://youtu.be/1bZ16BgmF8c"&gt;https://youtu.be/1bZ16BgmF8c&lt;/a&gt;
&lt;iframe width="700" height="400" src="https://www.youtube.com/embed/1bZ16BgmF8c" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2&gt;虛擬主機版NX12&lt;/h2&gt;
&lt;p&gt;可以在學校外面，使用的正版NX12，不用再去設定VPN。&lt;/p&gt;
&lt;p&gt;1.下載VirtualBox以及老師給的NX12.0.2 虛擬主機板。&lt;/p&gt;
&lt;p&gt;2.設定一下VirtualBox來建立一個虛擬主機。&lt;/p&gt;
&lt;p&gt;3.將老師的NX12虛擬硬碟導入虛擬主機裡面。&lt;/p&gt;
&lt;p&gt;4.啟動完成後，開啟NX12測試功能是否正常。&lt;/p&gt;
&lt;p&gt;5.使用網路探索，來點選網路內的VBOXSVR。&lt;/p&gt;
&lt;p&gt;6.新增一個跟主機共用的資料夾，再拉到桌面。&lt;/p&gt;
&lt;p&gt;7.再將檔案拖入，回到原本主機檢查，是否有檔案。&lt;/p&gt;
&lt;p&gt;我的教學影片(有字幕):&lt;/p&gt;
&lt;h2&gt;Batch Command設定&lt;/h2&gt;
&lt;p&gt;1.進入課程網站，Task2的Batch Command。&lt;/p&gt;
&lt;p&gt;2.開啟編輯器，把cad.bat的指令複製貼上。&lt;/p&gt;
&lt;p&gt;3.複製貼上，我的路徑不同所以有做改動。&lt;/p&gt;
&lt;p&gt;4.編輯完成後，儲存在y槽內，名子cad.bat。&lt;/p&gt;
&lt;p&gt;5.直接輸入cad就可以開啟近端9443了。&lt;/p&gt;
&lt;p&gt;6.其他的都是以一樣方法來編輯，就可以了。&lt;/p&gt;
&lt;p&gt;我的教學影片(有字幕):&lt;a href="https://youtu.be/Zw1n_6ba4C8"&gt;https://youtu.be/Zw1n_6ba4C8&lt;/a&gt;
&lt;iframe width="700" height="400" src="https://www.youtube.com/embed/Zw1n_6ba4C8" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2&gt;導入 GitExtensions&lt;/h2&gt;
&lt;p&gt;1.打開y槽，開啟GitExtensions.exe。&lt;/p&gt;
&lt;p&gt;2.進入Setting，設定git的home路徑。&lt;/p&gt;
&lt;p&gt;3.再來設定ssh改成putty，在案ok。&lt;/p&gt;
&lt;p&gt;4.開啟自己的倉儲，點選tools的GUI。&lt;/p&gt;
&lt;p&gt;5.輸入想要的訊息，中文英文都可以。&lt;/p&gt;
&lt;p&gt;6.案Stage changed &amp;gt; commit &amp;gt; push 。&lt;/p&gt;
&lt;p&gt;7.再到自己的倉儲檢查就可以了。&lt;/p&gt;
&lt;p&gt;我的教學影片(有字幕):&lt;a href="https://youtu.be/1j9J9JUULEo"&gt;https://youtu.be/1j9J9JUULEo&lt;/a&gt;
&lt;iframe width="700" height="400" src="https://www.youtube.com/embed/1j9J9JUULEo" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;</content><category term="2018FallCP"></category></entry><entry><title>電腦輔助設計實習-期中報告</title><link href=".%5C2018-Fall-32-bit-Windows-w9.html" rel="alternate"></link><published>2019-11-08T15:30:00+08:00</published><updated>2019-11-08T15:30:00+08:00</updated><author><name>s40723210</name></author><id>tag:None,2019-11-08:.\2018-Fall-32-bit-Windows-w9.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h2&gt;期中報告&lt;/h2&gt;
&lt;p&gt;網址: &lt;a href="https://youtu.be/dWtvxaCwQTg"&gt;https://youtu.be/dWtvxaCwQTg&lt;/a&gt;&lt;/p&gt;
&lt;iframe width="800" height="500" src="https://www.youtube.com/embed/dWtvxaCwQTg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2&gt;心得:&lt;/h2&gt;
&lt;p&gt;從Week 2 - Week 9中我學到了很多的東西，這一學期使用的是亂數分組，所以組員有些都不太熟，一開始一樣都是創一個倉儲，然後維護他，將每周的內容和影片都上傳上去，Solvespace 是一個很小的繪圖軟體，可以隨身攜帶，所以非常的方便，只是功能不多而已，它跟我們之前所學的繪圖軟體不太一樣，所以我花了一點的時間去熟悉它，再來就是V-rep 這個軟體，我們教了一下，就換成Webots了，因為Webots是免費的軟體，而且又比V-rep還多功能，所以我很好奇學不學會。&lt;/p&gt;
&lt;h2&gt;每一周的影片在我的網頁&lt;a href="https://s40723210.github.io/cad2019/content/index.html"&gt;s40723210&lt;/a&gt;和&lt;a href="https://s40723210.github.io/cad2019/reveal/index.html#/"&gt;reveal&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;Week 2:&lt;/h2&gt;
&lt;p&gt;進行亂數分組&lt;/p&gt;
&lt;p&gt;課程、評分標準的說明&lt;/p&gt;
&lt;p&gt;建立個人倉儲cad2019&lt;/p&gt;
&lt;h2&gt;Week 3:&lt;/h2&gt;
&lt;p&gt;Solvespace編譯&lt;/p&gt;
&lt;h2&gt;Week 4:&lt;/h2&gt;
&lt;p&gt;處理自己的倉儲&lt;/p&gt;
&lt;p&gt;將每周進度完成&lt;/p&gt;
&lt;p&gt;上傳有字幕的操作影片&lt;/p&gt;
&lt;h2&gt;Week 5:&lt;/h2&gt;
&lt;p&gt;Solvespace 操作&lt;/p&gt;
&lt;h2&gt;Week 6:&lt;/h2&gt;
&lt;p&gt;參數化零組件繪製&lt;/p&gt;
&lt;p&gt;網際 V-rep 模型控制&lt;/p&gt;
&lt;p&gt;新增啟動與停止按鈕&lt;/p&gt;
&lt;h2&gt;Week 7:&lt;/h2&gt;
&lt;p&gt;全班使用統一網站架構&lt;/p&gt;
&lt;p&gt;Solvespace 納入學號&lt;/p&gt;
&lt;p&gt;Solvespace 繪圖驗證&lt;/p&gt;
&lt;h2&gt;Week 8:&lt;/h2&gt;
&lt;p&gt;啟用 CMSiMDE中的網誌系統&lt;/p&gt;
&lt;p&gt;導入 Webots&lt;/p&gt;
&lt;p&gt;以ssh對Github 連線&lt;/p&gt;</content><category term="2018FallCP"></category></entry><entry><title>2018 Fall CP 課程</title><link href=".%5C2018-Fall-32-bit-Windows.html" rel="alternate"></link><published>2018-09-10T11:00:00+08:00</published><updated>2018-09-10T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:None,2018-09-10:.\2018-Fall-32-bit-Windows.html</id><summary type="html">&lt;p&gt;2018 Fall 一開始, 在一台已經 10 年的 32 位元的 Windows 7 操作系統中工作. 可攜的 Python 3.7.0 仍然可以配置, Leo Editor、PyQt5、flask、Markdown、pelican 與 bs4 的安裝, 也都沒有問題. 只有 Eric6 因為缺少必要模組與 Python 3.7.0 對應的 pyqt5-tools, 因此沒有安裝.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2018 Fall 一開始, 在一台已經 10 年的 32 位元的 Windows 7 操作系統中工作. 可攜的 Python 3.7.0 仍然可以配置, Leo Editor、PyQt5、flask、Markdown、pelican 與 bs4 的安裝, 也都沒有問題. 只有 Eric6 因為缺少必要模組與 Python 3.7.0 對應的 pyqt5-tools, 因此沒有安裝.&lt;/p&gt;


&lt;h2&gt;電腦規格&lt;/h2&gt;
&lt;p&gt;目前系上已經沒有 32 位元 Windows 操作系統的電腦, 所以先前只要有學生提到所使用的電腦是舊型 32 位元的 Windows XP 或 Windows 7, 都無法提供相應的可攜程式系統.&lt;/p&gt;
&lt;p&gt;但是, 當您桌上就只一台早期 Sony 推出的 VGC-LM26T 電腦, 採用 Intel core 2 Duo T8100 2.1 GHz 裝載 32 位元 Windows 7, 記憶體只有 2GB 的老舊電腦.&lt;/p&gt;
&lt;p&gt;夠用嗎?&lt;/p&gt;
&lt;p&gt;當然可以, 使用的是特別製作的 &lt;a href="https://mde1a1.kmol.info/2017fall/raw/p37_32.7z?name=c272a694f98180f8d1272b43f7d7b4fdd8f7f550"&gt;32 位元可攜系統&lt;/a&gt;, 除了不支援 Eric6 之外, 其餘功能都與 64 位元的  &lt;a href="https://drive.google.com/file/d/1DWtyoUhl8CycKJ8uulB3viRXE39KqpE1/view?usp=sharing"&gt;p37&lt;/a&gt; 相同.&lt;/p&gt;
&lt;h2&gt;工作流程&lt;/h2&gt;
&lt;p&gt;從 2018 Fall 開始, 前半學期希望每位計算機程課程的學員, 都能透過 &lt;a href="http://mde.tw/cp2018/content/"&gt;2018 計算機程式教材&lt;/a&gt; 內容, 深入學習 Python 3 各種程式語法, 利用 &lt;a href="https://github.com/chiamingyen/cmsimfly"&gt;CMSimfly&lt;/a&gt;、&lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt; 與 &lt;a href="https://revealjs.com/"&gt;Reveal.js&lt;/a&gt;, 熟悉如何在 &lt;a href="https://github.com/"&gt;Github&lt;/a&gt; 配置自己的網站、網誌與網際簡報系統.&lt;/p&gt;
&lt;p&gt;使用時, 啟動隨身系統的 start.bat, 利用命令列指令, git clone https://github.com/mdecourse/2018fall, 然後將內容配置在各自的 &lt;a href="https://github.com/"&gt;Github&lt;/a&gt; 帳號下.&lt;/p&gt;
&lt;h2&gt;程式專案&lt;/h2&gt;
&lt;p&gt;早在 1999 年, 就已經開始進行所謂&lt;a href="https://webcache.googleusercontent.com/search?q=cache:sqYPNC8_mgoJ:https://www.most.gov.tw/sci/ch/detail%3Farticle_uid%3D4ee546e6-73fa-43a8-b1df-a5a0a1fe1824%26menu_id%3D0bac23e6-b3df-4fe0-b152-2e1050eb2f2c%26content_type%3DP%26view_mode%3DlistView+&amp;amp;cd=6&amp;amp;hl=zh-TW&amp;amp;ct=clnk&amp;amp;gl=tw"&gt;網際機械設計資源中心&lt;/a&gt;的構建, 想像中的資源中心是一套網際專家系統, 包含各式機械設計流程中所需的模組, 全部依附在一個相對穩定, 可以持續改進的核心架構下, 類似 &lt;a href="https://github.com/jhpyle/docassemble"&gt;docassemble&lt;/a&gt; 的一套系統.&lt;/p&gt;
&lt;p&gt;將近二十年過去, &lt;a href="https://webcache.googleusercontent.com/search?q=cache:sqYPNC8_mgoJ:https://www.most.gov.tw/sci/ch/detail%3Farticle_uid%3D4ee546e6-73fa-43a8-b1df-a5a0a1fe1824%26menu_id%3D0bac23e6-b3df-4fe0-b152-2e1050eb2f2c%26content_type%3DP%26view_mode%3DlistView+&amp;amp;cd=6&amp;amp;hl=zh-TW&amp;amp;ct=clnk&amp;amp;gl=tw"&gt;網際機械設計資源中心&lt;/a&gt;始終仍只有片段系統, 其中包含 &lt;a href="https://github.com/chiamingyen/cmsimfly"&gt;CMSimfly&lt;/a&gt;、&lt;a href="https://github.com/chiamingyen/pygrouf"&gt;Pygrouf&lt;/a&gt; 與 &lt;a href="https://github.com/KmolYuan/Pyslvs-PyQt5"&gt;Pyslvs&lt;/a&gt; (&lt;a href="http://www.pyslvs.com/content/"&gt;Pyslvs 手冊&lt;/a&gt;)等相關專案.&lt;/p&gt;
&lt;p&gt;就如同&lt;a href="http://blog.ez2learn.com/2009/06/27/how-to-write-useful-program/"&gt;如何寫出有用的程式?&lt;/a&gt; 一文中所述, "沒有興趣不要來念資工" 是一句非常貼切的警語, 當學生對於程式設計提不起興趣, 沒有將所學的各式語法、資料結構與演算法, 套用在自己非常有興趣的領域中, 用來解決各式問題的話, 日復一日, 我們還是寫不出任何有用的程式!&lt;/p&gt;
&lt;h2&gt;早該起頭的重要工作&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.quora.com/Why-is-programming-so-important-in-the-modern-world"&gt;計算機程式的重要性&lt;/a&gt;其實已經無需爭辯, 人類未來的許多工作都是透過網路與數位運算達成, 既知趨勢如此, 每一位工程師就該越早起頭原本就該進行的重要工作, 透過計算機程式來解決問題, 構築一個值得長期投注心力的程式專案.&lt;/p&gt;</content><category term="2018FallCP"></category></entry></feed>